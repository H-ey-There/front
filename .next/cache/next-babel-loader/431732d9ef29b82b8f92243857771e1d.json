{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-single-container.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VideoSingleSidebarContainer from \"./video-single-sidebar-container\";\nimport VideoMetadataContainer from \"./video-metadata-container\";\nimport VideoCommentContainer from \"./video-comment\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexGrow: 1\n    }\n  });\n});\nexport default function VideoSingleContainer(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var classes = useStyles();\n\n  var _useState = useState(data),\n      video = _useState[0],\n      setVideo = _useState[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    console.log(setVideo(data));\n  }, []); // useEffect(() => {\n  //     async function loadData() {\n  //         console.log('hihi : ', router.query.id)\n  //         if (router.query.id !== undefined) {\n  //             console.log(`http://localhost:8082/video/${router.query.id}`)\n  //             const { data } = await axios(`http://localhost:8082/video/${router.query.id}`);\n  //             console.log('data: ', data);\n  //             await setVideo(data);\n  //             console.log('video : ',video)\n  //         }\n  //     }\n  //\n  //     console.log('data : ',data);\n  //     if (!data) {\n  //         loadData();\n  //         console.log(video);\n  //     }\n  //\n  //     console.log(video)\n  //\n  // }, [router.query.id]);\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      objectFit: 'contain'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(\"video\", {\n    width: \"100%\",\n    controls: true,\n    src: video.videoUrl,\n    poster: video.thumbnailUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Your browser does not support the video tag.\")), __jsx(VideoMetadataContainer, {\n    id: video.id,\n    title: video.title,\n    description: video.description,\n    createdAt: video.createdAt,\n    viewCount: video.viewCount,\n    goodStatus: video.goodStatus,\n    badStatus: video.badStatus,\n    userId: video.userId,\n    name: video.name,\n    userImg: video.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: '15px',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, __jsx(VideoCommentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }))), __jsx(VideoSingleSidebarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"\\n            \\n  .video-description {\\n    display: inline-block; \\n    width: 100%; \\n    white-space: nowrap; \\n    overflow: hidden; \\n    text-overflow: ellipsis;\\n    white-space: normal;\\n  }\\n  .video-container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  .thumbnail {\\n    position: relative;\\n    display: flex;\\n  }\\n  \\n  .thumbnail::before {\\n    content: attr(data-duration);\\n    position: absolute;\\n    background-color: rgba(0, 0, 0, .85);\\n    color: white;\\n    right: 5px;\\n    bottom: 5px;\\n    padding: .1em .3em;\\n    border-radius: .3em;\\n    font-size: .9rem;\\n  }\\n  \\n  .thumbnail-image {\\n    width: 100%;\\n    height: 100%;\\n    min-width: 250px;\\n    min-height: 150px;\\n    background-color: #AAA;\\n  }\\n  \\n  .video-bottom-section {\\n    display: flex;\\n    align-items: flex-start;\\n    margin-top: 1rem;\\n  }\\n  \\n  .channel-icon {\\n    margin-right: .75rem;\\n    border-radius: 50%;\\n    width: 36px;\\n    height: 36px;\\n    background-color: #AAA;\\n  }\\n  \\n  .video-details {\\n    display: flex;\\n    flex-direction: column;\\n    margin-left: 20px;\\n  }\\n  \\n  .video-title {\\n    font-size: 1.1rem;\\n    font-weight: bold;\\n    margin-bottom: .5rem;\\n    text-decoration: none;\\n    color: black;\\n  }\\n  \\n  .video-channel-name {\\n    margin-bottom: .1rem;\\n    text-decoration: none;\\n    transition: color 150ms;\\n  }\\n  \\n  .video-channel-name:hover {\\n    color: #111;\\n  }\\n  \\n  .video-channel-name,\\n  .video-metadata {\\n    color: #555;\\n  }\\n  \"));\n}\n\n_s(VideoSingleContainer, \"1GV0tGhk54fAejlQDTbUb9RvcWw=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = VideoSingleContainer;\n\nVideoSingleContainer.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"http://localhost:8082/video/\".concat(Number(ctx.query.id)));\n\n          case 2:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            console.log('data:', data);\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSingleContainer\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-single-container.tsx"],"names":["React","useState","useEffect","makeStyles","createStyles","Grid","VideoSingleSidebarContainer","VideoMetadataContainer","VideoCommentContainer","axios","useRouter","useStyles","theme","root","flexGrow","VideoSingleContainer","data","classes","video","setVideo","router","console","log","objectFit","videoUrl","thumbnailUrl","id","title","description","createdAt","viewCount","goodStatus","badStatus","userId","name","userImg","margin","padding","getInitialProps","ctx","get","Number","query"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAA8C,0BAA9C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,2BAAP,MAAwC,kCAAxC;AACA,OAAOC,sBAAP,MAAmC,4BAAnC;AACA,OAAOC,qBAAP,MAAkC,iBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,IAAMC,SAAS,GAAGR,UAAU,CAAC,UAACS,KAAD;AAAA,SACzBR,YAAY,CAAC;AACTS,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR;AADG,GAAD,CADa;AAAA,CAAD,CAA5B;AAiDA,eAAe,SAASC,oBAAT,OAAsC;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;AACjD,MAAMC,OAAO,GAAGN,SAAS,EAAzB;;AADiD,kBAEvBV,QAAQ,CAAQe,IAAR,CAFe;AAAA,MAE1CE,KAF0C;AAAA,MAEnCC,QAFmC;;AAGjD,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AAEAR,EAAAA,SAAS,CAAC,YAAM;AAACmB,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACH,IAAD,CAApB;AAA4B,GAApC,EAAqC,EAArC,CAAT,CALiD,CAQjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SACI;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AACRU,MAAAA,SAAS,EAAE;AADH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAO,IAAA,KAAK,QAAZ;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,GAAG,EAAEL,KAAK,CAACM,QAA1C;AAAoD,IAAA,MAAM,EAAEN,KAAK,CAACO,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAHJ,CADJ,EASI,MAAC,sBAAD;AACI,IAAA,EAAE,EAAEP,KAAK,CAACQ,EADd;AAEI,IAAA,KAAK,EAAER,KAAK,CAACS,KAFjB;AAGI,IAAA,WAAW,EAAET,KAAK,CAACU,WAHvB;AAII,IAAA,SAAS,EAAEV,KAAK,CAACW,SAJrB;AAKI,IAAA,SAAS,EAAEX,KAAK,CAACY,SALrB;AAMI,IAAA,UAAU,EAAEZ,KAAK,CAACa,UANtB;AAOI,IAAA,SAAS,EAAEb,KAAK,CAACc,SAPrB;AAQI,IAAA,MAAM,EAAEd,KAAK,CAACe,MARlB;AASI,IAAA,IAAI,EAAEf,KAAK,CAACgB,IAThB;AAUI,IAAA,OAAO,EAAEhB,KAAK,CAACiB,OAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,EAuBI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,CADJ,EA8BI,MAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,CADJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,++CAlCJ,CADJ;AAwHH;;GAvJuBtB,oB;UACJJ,S,EAEDD,S;;;KAHKK,oB;;AAyJxBA,oBAAoB,CAACuB,eAArB;AAAA,uEAAuC,iBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZ9B,KAAK,CAAC+B,GAAN,uCAAyCC,MAAM,CAACF,GAAG,CAACG,KAAJ,CAAUhB,EAAX,CAA/C,EADY;;AAAA;AAAA;AAC3BV,YAAAA,IAD2B,oBAC3BA,IAD2B;AAEnCK,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBN,IAApB;AAFmC,6CAG5B;AAAEA,cAAAA,IAAI,EAAJA;AAAF,aAH4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VideoSingleSidebarContainer from \"./video-single-sidebar-container\";\nimport VideoMetadataContainer from \"./video-metadata-container\";\nimport VideoCommentContainer from \"./video-comment\";\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\nimport {NextPageContext} from \"next\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    }),\n);\n\n\ninterface LargeComment {\n  id: number;\n  comment: string;\n  createdAt: string;\n  modifiedAt: string;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n}\n\ninterface Comment {\n  id: number;\n  comment: string;\n  createdAt: string;\n  modifiedAt: string;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n  largeComments: LargeComment[];\n}\ninterface Video {\n  id: number;\n  title: string;\n  description: string;\n  createdAt: string;\n  modifiedAt: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  viewCount: number\n  goodStatus: boolean,\n  badStatus: boolean;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n  comments : Comment[];\n}\n\nexport default function VideoSingleContainer({data}) {\n    const classes = useStyles();\n    const [video, setVideo] = useState<Video>(data);\n    const router = useRouter()\n\n    useEffect(() => {console.log(setVideo(data))},[])\n\n\n    // useEffect(() => {\n    //     async function loadData() {\n    //         console.log('hihi : ', router.query.id)\n    //         if (router.query.id !== undefined) {\n    //             console.log(`http://localhost:8082/video/${router.query.id}`)\n    //             const { data } = await axios(`http://localhost:8082/video/${router.query.id}`);\n    //             console.log('data: ', data);\n    //             await setVideo(data);\n    //             console.log('video : ',video)\n    //         }\n    //     }\n    //\n    //     console.log('data : ',data);\n    //     if (!data) {\n    //         loadData();\n    //         console.log(video);\n    //     }\n    //\n    //     console.log(video)\n    //\n    // }, [router.query.id]);\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={9}>\n                    <div style={{\n                        objectFit: 'contain'\n                    }}>\n                        <video width={`100%`} controls src={video.videoUrl} poster={video.thumbnailUrl}>\n                            Your browser does not support the video tag.\n                        </video>\n                    </div>\n\n                    <VideoMetadataContainer\n                        id={video.id}\n                        title={video.title}\n                        description={video.description}\n                        createdAt={video.createdAt}\n                        viewCount={video.viewCount}\n                        goodStatus={video.goodStatus}\n                        badStatus={video.badStatus}\n                        userId={video.userId}\n                        name={video.name}\n                        userImg={video.userImg}\n                    />\n\n                    <hr/>\n                    <div style={{margin: '15px', padding: '10px'}}>\n                        <VideoCommentContainer />\n                    </div>\n\n\n                </Grid>\n                <VideoSingleSidebarContainer />\n            </Grid>\n\n            <style>{`\n            \n  .video-description {\n    display: inline-block; \n    width: 100%; \n    white-space: nowrap; \n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  .video-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .thumbnail {\n    position: relative;\n    display: flex;\n  }\n  \n  .thumbnail::before {\n    content: attr(data-duration);\n    position: absolute;\n    background-color: rgba(0, 0, 0, .85);\n    color: white;\n    right: 5px;\n    bottom: 5px;\n    padding: .1em .3em;\n    border-radius: .3em;\n    font-size: .9rem;\n  }\n  \n  .thumbnail-image {\n    width: 100%;\n    height: 100%;\n    min-width: 250px;\n    min-height: 150px;\n    background-color: #AAA;\n  }\n  \n  .video-bottom-section {\n    display: flex;\n    align-items: flex-start;\n    margin-top: 1rem;\n  }\n  \n  .channel-icon {\n    margin-right: .75rem;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    background-color: #AAA;\n  }\n  \n  .video-details {\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n  }\n  \n  .video-title {\n    font-size: 1.1rem;\n    font-weight: bold;\n    margin-bottom: .5rem;\n    text-decoration: none;\n    color: black;\n  }\n  \n  .video-channel-name {\n    margin-bottom: .1rem;\n    text-decoration: none;\n    transition: color 150ms;\n  }\n  \n  .video-channel-name:hover {\n    color: #111;\n  }\n  \n  .video-channel-name,\n  .video-metadata {\n    color: #555;\n  }\n  `}</style>\n        </div>\n    )\n}\n\nVideoSingleContainer.getInitialProps = async (ctx:NextPageContext) => {\n    const { data } = await axios.get(`http://localhost:8082/video/${Number(ctx.query.id)}`);\n    console.log('data:',data);\n    return { data };\n}"]},"metadata":{},"sourceType":"module"}