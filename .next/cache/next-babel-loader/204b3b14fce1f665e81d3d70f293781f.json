{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Button, TextField } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      marginLeft: '50px',\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline'\n    }\n  });\n});\nexport default function VideoLargeCommentContainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var id = _ref.id,\n      largeComments = _ref.largeComments;\n\n  var _useState = useState(id),\n      commentId = _useState[0],\n      setCommentId = _useState[1];\n\n  var _useState2 = useState(largeComments),\n      largeCommentList = _useState2[0],\n      setLargeCommentList = _useState2[1];\n\n  var classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, largeCommentList.map(function (c) {\n    __jsx(React.Fragment, null, __jsx(ListItem, {\n      key: c.id,\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      href: \"/community/\".concat(c.userId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }, __jsx(Avatar, {\n      alt: c.name,\n      src: c.userImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }))), __jsx(ListItemText, {\n      primary: c.name,\n      secondary: __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 37\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 41\n        }\n      }), c.comment),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(VideoLargeCommentContainer, \"GmXyC6xIkqmcocm3kZ1BRjpksvE=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoLargeCommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoLargeCommentContainer\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx"],"names":["createStyles","makeStyles","List","ListItem","ListItemAvatar","Avatar","ListItemText","React","useState","Typography","Divider","Button","TextField","useStyles","theme","root","marginLeft","width","backgroundColor","palette","background","paper","inline","display","VideoLargeCommentContainer","id","largeComments","commentId","setCommentId","largeCommentList","setLargeCommentList","classes","map","c","userId","name","userImg","comment"],"mappings":"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","sourcesContent":["import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React,{useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: '50px',\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\nexport default function VideoLargeCommentContainer({id, largeComments}) {\n    const [commentId, setCommentId] = useState(id);\n    const [largeCommentList, setLargeCommentList] = useState(largeComments);\n    const classes = useStyles();\n\n    return (\n        <>\n            <form>\n                <TextField style={{width: '100%'}} label=\"Leave Your Comment Here..!\"/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\">\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n            <List className={classes.root}>\n                {largeCommentList.map(c => {\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                    </>\n                })}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}