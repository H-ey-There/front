{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/VideoPlayList.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'scroll',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      height: '100%'\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    }\n  });\n});\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nvar tileData = [{\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}];\nexport default function VideoPlayList() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Play List\")), tileData.map(function (tile) {\n    return __jsx(GridListTile, {\n      key: tile.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }), __jsx(GridListTileBar, {\n      title: tile.title,\n      subtitle: __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 39\n        }\n      }, \"by: \", tile.author),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(VideoPlayList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoPlayList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayList\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/VideoPlayList.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","height","icon","color","tileData","img","title","author","VideoPlayList","classes","map","tile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'scroll',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            height: '100%',\n        },\n        icon: {\n            color: 'rgba(255, 255, 255, 0.54)',\n        },\n    }),\n);\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\n\nconst tileData = [\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n\n]\nexport default function VideoPlayList() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={180} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\">Play List</ListSubheader>\n                </GridListTile>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title} />\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={<span>by: {tile.author}</span>}\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}