{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/VideoGridList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: '100%',\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\nconst tileData = [{\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'image',\n  title: 'Image',\n  author: 'author'\n}];\nexport default function VideoGridList() {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 4,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"December\")), tileData.map(tile => __jsx(GridListTile, {\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), __jsx(GridListTileBar, {\n    title: tile.title,\n    subtitle: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 39\n      }\n    }, \"by: \", tile.author),\n    actionIcon: __jsx(IconButton, {\n      \"aria-label\": `info about ${tile.title}`,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, __jsx(InfoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/VideoGridList.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","tileData","img","title","author","VideoGridList","classes","map","tile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Theme, createStyles, makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            width: '100%',\n            height: 450,\n        },\n        icon: {\n            color: 'rgba(255, 255, 255, 0.54)',\n        },\n    }),\n);\n\nconst tileData = [\n    {\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'image',\n        title: 'Image',\n        author: 'author',\n    },\n\n\n\n]\nexport default function VideoGridList() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={180} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={4} style={{height: 'auto'}}>\n                    <ListSubheader component=\"div\">December</ListSubheader>\n                </GridListTile>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title}/>\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={<span>by: {tile.author}</span>}\n                            actionIcon={\n                                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                                    <InfoIcon/>\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}