{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx\";\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport cookieCutter from 'cookie-cutter';\nimport LargeCommentList from \"../comment/large-comment-container\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    marginLeft: '50px',\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function VideoLargeCommentContainer({\n  cId,\n  largeComments\n}) {\n  const {\n    0: largeCommentList,\n    1: setLargeCommentList\n  } = useState(largeComments);\n  const classes = useStyles();\n  const {\n    0: largeComment,\n    1: setLargeComment\n  } = useState(\"\");\n\n  async function submitHandler(e) {\n    e.preventDefault();\n\n    if (largeComment.length < 3) {\n      window.alert(\"입력이 너무 적습니다\");\n      setLargeComment(\"\");\n      return;\n    }\n\n    ;\n    const payload = {\n      requestUserId: Number(cookieCutter.get(\"id\")),\n      commentId: cId,\n      largeComment: largeComment\n    };\n    const {\n      status\n    } = await axios.post(\"http://localhost:8082/registration/largeComment\", payload);\n\n    if (status === 201 || status == 200) {\n      const response = await axios.get(`http://localhost:8082/comment/${cId}/largeComment`);\n      console.log('largecommnet:', response.data);\n      setLargeCommentList(response.data);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    onChange: e => {\n      setLargeComment(e.target.value);\n      console.log(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: e => submitHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, largeComments.length > 0 && largeCommentList.map((c, index) => __jsx(React.Fragment, null, __jsx(ListItem, {\n    key: c.id,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    href: `/community/${c.userId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, __jsx(Avatar, {\n    alt: c.name,\n    src: c.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }))), __jsx(ListItemText, {\n    primary: c.name,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }), c.comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  })), __jsx(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx"],"names":["createStyles","makeStyles","List","ListItem","ListItemAvatar","Avatar","ListItemText","React","useState","Typography","Divider","Button","TextField","cookieCutter","LargeCommentList","axios","useStyles","theme","root","marginLeft","width","backgroundColor","palette","background","paper","inline","display","VideoLargeCommentContainer","cId","largeComments","largeCommentList","setLargeCommentList","classes","largeComment","setLargeComment","submitHandler","e","preventDefault","length","window","alert","payload","requestUserId","Number","get","commentId","status","post","response","console","log","data","target","value","map","c","index","id","userId","name","userImg","comment"],"mappings":"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","sourcesContent":["import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React,{useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport cookieCutter from 'cookie-cutter'\nimport LargeCommentList from \"../comment/large-comment-container\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: '50px',\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\n\ninterface LargeCommentList {\n    cId: number\n    largeComments: LargeComment[];\n}\n\ninterface LargeCommentRegisterRequestDto {\n    requestUserId:number;\n    commentId:number;\n    largeComment:string;\n}\n\nexport default function VideoLargeCommentContainer({cId, largeComments}:LargeCommentList) {\n    const [largeCommentList, setLargeCommentList] = useState(largeComments);\n    const classes = useStyles();\n    const [largeComment, setLargeComment] = useState(\"\");\n\n    async function submitHandler(e) {\n        e.preventDefault();\n        if (largeComment.length < 3) {\n            window.alert(\"입력이 너무 적습니다\");\n            setLargeComment(\"\");\n            return;\n        };\n\n        const payload:LargeCommentRegisterRequestDto = {\n            requestUserId : Number(cookieCutter.get(\"id\")),\n            commentId: cId,\n            largeComment: largeComment\n        };\n\n        const { status } = await axios.post(\"http://localhost:8082/registration/largeComment\",payload);\n        if (status === 201 || status == 200) {\n            const response = await axios.get(`http://localhost:8082/comment/${cId}/largeComment`)\n            console.log('largecommnet:',response.data)\n            setLargeCommentList(response.data);\n        }\n    }\n\n    return (\n        <>\n            <form>\n                <TextField style={{width: '100%'}} label=\"Leave Your Comment Here..!\" onChange={e => {\n                    setLargeComment(e.target.value)\n                    console.log(e.target.value)\n                }}/>\n                <br/>\n                <Button type=\"submit\" variant=\"outlined\" color=\"primary\" onClick={e => submitHandler(e)}>\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n            <List className={classes.root}>\n                {largeComments.length > 0 && largeCommentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}