{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Avatar, Card, CardHeader } from \"@material-ui/core\";\nimport Link from \"next/link\";\nimport { red } from \"@material-ui/core/colors\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      //justifyContent: 'space-around',\n      backgroundColor: theme.palette.background.paper\n    },\n    card: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%',\n      overflow: 'hidden',\n      maxHeight: 500,\n      maring: 3,\n      justifyContent: 'flexStart'\n    },\n    gridList: {\n      flexWrap: 'wrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    header: {\n      marginLeft: 0,\n      paddingLeft: 0,\n      marginTop: 0,\n      paddingTop: 0\n    }\n  });\n});\nvar videos = [{\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}];\nexport default function HotVideoGridListByGoodCnt() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    cellHeight: 260,\n    className: classes.gridList,\n    cols: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, videos.map(function (v) {\n    return __jsx(Card, {\n      key: v.id,\n      className: classes.card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, __jsx(Link, {\n      href: \"/video/1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, __jsx(\"video\", {\n      src: v.videoUrl,\n      width: \"100%\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    })), __jsx(CardHeader, {\n      className: classes.header,\n      avatar: __jsx(IconButton, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 41\n        }\n      }, __jsx(Link, {\n        href: \"/community/1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 45\n        }\n      }, __jsx(Avatar, {\n        className: classes.avatar,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 49\n        }\n      }, v.name))),\n      title: \"Shrimp and Chorizo Paella\",\n      subheader: \"September 14, 2016\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(HotVideoGridListByGoodCnt, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = HotVideoGridListByGoodCnt;\n\nvar _c;\n\n$RefreshReg$(_c, \"HotVideoGridListByGoodCnt\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx"],"names":["React","createStyles","makeStyles","GridList","IconButton","Avatar","Card","CardHeader","Link","red","useStyles","theme","root","display","flexWrap","backgroundColor","palette","background","paper","card","width","overflow","maxHeight","maring","justifyContent","gridList","transform","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","header","paddingLeft","marginTop","videos","id","title","description","createdAt","Date","modifiedAt","thumbnailUrl","videoUrl","viewCount","userId","email","name","userImg","HotVideoGridListByGoodCnt","classes","map","v"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Theme, createStyles, makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nimport {VideoResponseDto} from \"../../api/video/VideoResponseDto\";\nimport {Avatar, Card, CardHeader} from \"@material-ui/core\";\nimport Link from \"next/link\";\nimport {red} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            //justifyContent: 'space-around',\n            backgroundColor: theme.palette.background.paper,\n        },\n        card: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '100%',\n            overflow: 'hidden',\n            maxHeight: 500,\n            maring: 3,\n            justifyContent: 'flexStart'\n        },\n        gridList: {\n            flexWrap: 'wrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n        header: {\n            marginLeft: 0,\n            paddingLeft: 0,\n            marginTop: 0,\n            paddingTop: 0\n        }\n    }),\n);\n\nconst videos = [\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n]\n\n\nexport default function HotVideoGridListByGoodCnt() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={260} className={classes.gridList} cols={4}>\n                {videos.map((v) => (\n                    <Card key={v.id} className={classes.card}>\n                        <Link href={`/video/1`}>\n                            <video src={v.videoUrl} width=\"100%\"/>\n                        </Link>\n                        <CardHeader className={classes.header}\n                                    avatar={\n                                        <IconButton>\n                                            <Link href={`/community/1`}>\n                                                <Avatar className={classes.avatar}>\n                                                    {v.name}\n                                                </Avatar>\n                                            </Link>\n                                        </IconButton>\n                                    }\n                                    title=\"Shrimp and Chorizo Paella\"\n                                    subheader=\"September 14, 2016\"\n                        />\n                    </Card>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}