{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from \"@material-ui/icons/Info\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.light\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  });\n});\nvar tileData = [{\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/400x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/200x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}];\nexport default function HotVideoGridListByViewCnt() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 3.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, tileData.map(function (tile) {\n    return __jsx(GridListTile, {\n      key: tile.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }), __jsx(GridListTileBar, {\n      title: tile.title,\n      subtitle: __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 39\n        }\n      }, \"by: \", tile.author),\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"info about \".concat(tile.title),\n        className: classes.icon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, __jsx(InfoIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(HotVideoGridListByViewCnt, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = HotVideoGridListByViewCnt;\n\nvar _c;\n\n$RefreshReg$(_c, \"HotVideoGridListByViewCnt\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","light","titleBar","tileData","img","author","HotVideoGridListByViewCnt","classes","map","tile","icon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport InfoIcon from \"@material-ui/icons/Info\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.light,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\nconst tileData = [\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/400x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/200x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n]\n\nexport default function HotVideoGridListByViewCnt() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={3.5}>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title}/>\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={<span>by: {tile.author}</span>}\n                            actionIcon={\n                                <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                                    <InfoIcon/>\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}