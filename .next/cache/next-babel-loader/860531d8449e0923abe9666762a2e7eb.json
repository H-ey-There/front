{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/upload/video.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: '300px',\n    maxWidth: '1000px',\n    rows: 19\n  },\n  preview: {\n    minWidth: '300px',\n    maxWidth: '1000px'\n  },\n  button: {\n    margin: '10px',\n    padding: '10px'\n  }\n}));\nexport default function UploadVideo() {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: thumbnail,\n    1: setThumbnail\n  } = useState({\n    preview: \"\",\n    raw: null\n  });\n  const {\n    0: video,\n    1: setVideo\n  } = useState({\n    preview: \"\",\n    raw: null\n  });\n  const classes = useStyles();\n\n  async function onResetHandler() {\n    console.log(\"reset\");\n    setTitle(\"\");\n    setDescription(\"\");\n    setThumbnail({\n      preview: \"\",\n      raw: null\n    });\n    setVideo({\n      preview: \"\",\n      raw: null\n    });\n  }\n\n  async function onSubmitHandler() {\n    const form = new FormData();\n    form.append(\"requestUserId\", \"1\");\n    form.append(\"title\", title);\n    form.append(\"description\", description);\n    form.append(\"thumbnail\", thumbnail.raw);\n    form.append(\"video\", video.raw);\n    await axios.post(\"http://localhost:8082/registration\", form).then(response => {\n      const {\n        status,\n        data\n      } = response;\n      if (status === 201 || status == 200) console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    label: \"Title\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"title...\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), __jsx(TextField, {\n    className: classes.textField,\n    label: \"Video Description\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"video description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 10,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-thumbnail\",\n    name: \"upload-photo\",\n    type: \"file\",\n    onChange: e => setThumbnail({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, \"Upload Thumbnail\")), thumbnail.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"secondary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: () => setThumbnail({\n      preview: \"\",\n      raw: null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Remove\"), __jsx(\"img\", {\n    className: classes.preview,\n    src: thumbnail.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-video\",\n    name: \"upload-video\",\n    type: \"file\",\n    onChange: e => setVideo({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: () => setVideo({\n      preview: \"\",\n      raw: null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Upload Video\")), video.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"secondary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"Remove\"), __jsx(\"video\", {\n    className: classes.preview,\n    autoPlay: true,\n    controls: true,\n    src: video.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"Upload\"), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: onResetHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Reset\")));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/upload/video.tsx"],"names":["React","useState","createStyles","makeStyles","TextField","axios","Button","useStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","minWidth","maxWidth","rows","preview","button","margin","padding","UploadVideo","title","setTitle","description","setDescription","thumbnail","setThumbnail","raw","video","setVideo","classes","onResetHandler","console","log","onSubmitHandler","form","FormData","append","post","then","response","status","data","catch","error","shrink","e","target","value","URL","createObjectURL","files"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAA8C,0BAA9C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IACzBN,YAAY,CAAC;AACTO,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE;AAFR,GADG;AAKTC,EAAAA,SAAS,EAAE;AACPC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADL;AAEPC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAFN;AAGPE,IAAAA,QAAQ,EAAE,OAHH;AAIPC,IAAAA,QAAQ,EAAE,QAJH;AAKPC,IAAAA,IAAI,EAAE;AALC,GALF;AAYTC,EAAAA,OAAO,EAAE;AACLH,IAAAA,QAAQ,EAAE,OADL;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAZA;AAgBTG,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,OAAO,EAAE;AAFL;AAhBC,CAAD,CADY,CAA5B;AA8BA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBxB,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM;AAAA,OAACyB,WAAD;AAAA,OAAcC;AAAd,MAAgC1B,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAM;AAAA,OAAC2B,SAAD;AAAA,OAAYC;AAAZ,MAA4B5B,QAAQ,CAAW;AACjDkB,IAAAA,OAAO,EAAE,EADwC;AAEjDW,IAAAA,GAAG,EAAE;AAF4C,GAAX,CAA1C;AAIA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB/B,QAAQ,CAAW;AACzCkB,IAAAA,OAAO,EAAE,EADgC;AAEzCW,IAAAA,GAAG,EAAE;AAFoC,GAAX,CAAlC;AAKA,QAAMG,OAAO,GAAG1B,SAAS,EAAzB;;AAEA,iBAAe2B,cAAf,GAAgC;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAX,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,YAAY,CAAC;AAACV,MAAAA,OAAO,EAAE,EAAV;AAAcW,MAAAA,GAAG,EAAE;AAAnB,KAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC;AAACb,MAAAA,OAAO,EAAE,EAAV;AAAcW,MAAAA,GAAG,EAAE;AAAnB,KAAD,CAAR;AACH;;AAED,iBAAeO,eAAf,GAAiC;AAC7B,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,IAAAA,IAAI,CAACE,MAAL,CAAY,eAAZ,EAA6B,GAA7B;AACAF,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBhB,KAArB;AACAc,IAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2Bd,WAA3B;AACAY,IAAAA,IAAI,CAACE,MAAL,CAAY,WAAZ,EAAyBZ,SAAS,CAACE,GAAnC;AACAQ,IAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBT,KAAK,CAACD,GAA3B;AAEA,UAAMzB,KAAK,CAACoC,IAAN,CAAW,oCAAX,EAAiDH,IAAjD,EACDI,IADC,CACIC,QAAQ,IAAI;AACd,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAiBF,QAAvB;AACA,UAAIC,MAAM,KAAK,GAAX,IAAkBA,MAAM,IAAI,GAAhC,EACIT,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACP,KALC,EAMDC,KANC,CAMKC,KAAK,IAAI;AACZZ,MAAAA,OAAO,CAACY,KAAR,CAAcA,KAAd;AACH,KARC,CAAN;AASH;;AAED,SACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACxB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AACI,IAAA,SAAS,EAAEwB,OAAO,CAACrB,SADvB;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAE;AAAT,KAHX;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,MAAM,EAAC,QANX;AAOI,IAAA,eAAe,EAAE;AACb2B,MAAAA,MAAM,EAAE;AADK,KAPrB;AAUI,IAAA,OAAO,EAAC,UAVZ;AAWI,IAAA,QAAQ,EAAEC,CAAC,IAAIxB,QAAQ,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAX3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAeI,MAAC,SAAD;AACI,IAAA,SAAS,EAAElB,OAAO,CAACrB,SADvB;AAEI,IAAA,KAAK,EAAC,mBAFV;AAGI,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAE;AAAT,KAHX;AAII,IAAA,WAAW,EAAC,mBAJhB;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,IAAI,EAAE,EAPV;AAQI,IAAA,MAAM,EAAC,QARX;AASI,IAAA,eAAe,EAAE;AACb2B,MAAAA,MAAM,EAAE;AADK,KATrB;AAYI,IAAA,OAAO,EAAC,UAZZ;AAaI,IAAA,QAAQ,EAAEC,CAAC,IAAItB,cAAc,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAbjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EA+BI;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAE;AAACzC,MAAAA,OAAO,EAAE;AAAV,KADX;AAEI,IAAA,EAAE,EAAC,kBAFP;AAGI,IAAA,IAAI,EAAC,cAHT;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEuC,CAAC,IAAIpB,YAAY,CAAC;AACxBV,MAAAA,OAAO,EAAEiC,GAAG,CAACC,eAAJ,CAAoBJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf,CAApB,CADe;AAExBxB,MAAAA,GAAG,EAAEmB,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf;AAFmB,KAAD,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAYI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAErB,OAAO,CAACb,MAA3B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAmD,IAAA,OAAO,EAAC,WAA3D;AAAuE,IAAA,SAAS,EAAC,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAZJ,CA/BJ,EAgDKQ,SAAS,CAACE,GAAV,KAAkB,IAAlB,IAEG,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEG,OAAO,CAACb,MAA3B;AAAmC,IAAA,KAAK,EAAC,WAAzC;AAAqD,IAAA,OAAO,EAAC,WAA7D;AAAyE,IAAA,SAAS,EAAC,MAAnF;AACQ,IAAA,OAAO,EAAE,MAAMS,YAAY,CAAC;AAACV,MAAAA,OAAO,EAAE,EAAV;AAAcW,MAAAA,GAAG,EAAE;AAAnB,KAAD,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMI;AAAK,IAAA,SAAS,EAAEG,OAAO,CAACd,OAAxB;AAAiC,IAAA,GAAG,EAAES,SAAS,CAACT,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAlDR,EA8DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9DJ,EAgEI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,KAAK,EAAE;AAACT,MAAAA,OAAO,EAAE;AAAV,KADX;AAEI,IAAA,EAAE,EAAC,cAFP;AAGI,IAAA,IAAI,EAAC,cAHT;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEuC,CAAC,IAAIjB,QAAQ,CAAC;AACpBb,MAAAA,OAAO,EAAEiC,GAAG,CAACC,eAAJ,CAAoBJ,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf,CAApB,CADW;AAEpBxB,MAAAA,GAAG,EAAEmB,CAAC,CAACC,MAAF,CAASI,KAAT,CAAe,CAAf;AAFe,KAAD,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAcI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAErB,OAAO,CAACb,MAA3B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAmD,IAAA,OAAO,EAAC,WAA3D;AAAuE,IAAA,SAAS,EAAC,MAAjF;AACQ,IAAA,OAAO,EAAE,MAAMY,QAAQ,CAAC;AAACb,MAAAA,OAAO,EAAE,EAAV;AAAcW,MAAAA,GAAG,EAAE;AAAnB,KAAD,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,CAhEJ,EAmFKC,KAAK,CAACD,GAAN,KAAc,IAAd,IACG,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEG,OAAO,CAACb,MAA3B;AAAmC,IAAA,KAAK,EAAC,WAAzC;AAAqD,IAAA,OAAO,EAAC,WAA7D;AAAyE,IAAA,SAAS,EAAC,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAKI;AAAO,IAAA,SAAS,EAAEa,OAAO,CAACd,OAA1B;AAAmC,IAAA,QAAQ,MAA3C;AAA4C,IAAA,QAAQ,MAApD;AAAqD,IAAA,GAAG,EAAEY,KAAK,CAACZ,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CApFR,EA6FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7FJ,EA8FI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9FJ,EA+FI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEc,OAAO,CAACb,MAA3B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAmD,IAAA,OAAO,EAAC,WAA3D;AAAuE,IAAA,SAAS,EAAC,MAAjF;AACQ,IAAA,OAAO,EAAEiB,eADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/FJ,EAmGI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEJ,OAAO,CAACb,MAA3B;AAAmC,IAAA,KAAK,EAAC,SAAzC;AAAmD,IAAA,OAAO,EAAC,WAA3D;AAAuE,IAAA,SAAS,EAAC,MAAjF;AACQ,IAAA,OAAO,EAAEc,cADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnGJ,CADJ,CADJ;AA6GH","sourcesContent":["import React, {useState} from \"react\";\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport {Button} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            minWidth: '300px',\n            maxWidth: '1000px',\n            rows: 19\n        },\n        preview: {\n            minWidth: '300px',\n            maxWidth: '1000px'\n        },\n        button: {\n            margin: '10px',\n            padding: '10px'\n        }\n    }),\n);\n\n\ninterface Metadata {\n    preview: string;\n    raw?: File;\n}\n\nexport default function UploadVideo() {\n    const [title, setTitle] = useState<string>(\"\");\n    const [description, setDescription] = useState<string>(\"\");\n    const [thumbnail, setThumbnail] = useState<Metadata>({\n        preview: \"\",\n        raw: null,\n    });\n    const [video, setVideo] = useState<Metadata>({\n        preview: \"\",\n        raw: null,\n    });\n\n    const classes = useStyles();\n\n    async function onResetHandler() {\n        console.log(\"reset\")\n        setTitle(\"\");\n        setDescription(\"\");\n        setThumbnail({preview: \"\", raw: null});\n        setVideo({preview: \"\", raw: null});\n    }\n\n    async function onSubmitHandler() {\n        const form = new FormData();\n        form.append(\"requestUserId\", \"1\");\n        form.append(\"title\", title);\n        form.append(\"description\", description);\n        form.append(\"thumbnail\", thumbnail.raw);\n        form.append(\"video\", video.raw);\n\n        await axios.post(\"http://localhost:8082/registration\", form)\n            .then(response => {\n                const {status, data} = response;\n                if (status === 201 || status == 200)\n                    console.log(data);\n            })\n            .catch(error => {\n                console.error(error);\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <TextField\n                    className={classes.textField}\n                    label=\"Title\"\n                    style={{margin: 8}}\n                    placeholder=\"title...\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    onChange={e => setTitle(e.target.value)}\n                />\n\n                <TextField\n                    className={classes.textField}\n                    label=\"Video Description\"\n                    style={{margin: 8}}\n                    placeholder=\"video description\"\n                    fullWidth\n                    multiline\n                    rows={10}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    onChange={e => setDescription(e.target.value)}\n                />\n\n                <label htmlFor=\"upload-thumbnail\">\n                    <input\n                        style={{display: 'none'}}\n                        id=\"upload-thumbnail\"\n                        name=\"upload-photo\"\n                        type=\"file\"\n                        onChange={e => setThumbnail({\n                            preview: URL.createObjectURL(e.target.files[0]),\n                            raw: e.target.files[0]\n                        })}\n                    />\n\n                    <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\">\n                        Upload Thumbnail\n                    </Button>\n                </label>\n\n                {thumbnail.raw !== null &&\n                (\n                    <>\n                        <br/>\n                        <Button className={classes.button} color=\"secondary\" variant=\"contained\" component=\"span\"\n                                onClick={() => setThumbnail({preview: \"\", raw: null})}>\n                            Remove\n                        </Button>\n                        <img className={classes.preview} src={thumbnail.preview} />\n                        <br/>\n                    </>\n                )\n\n                }\n                <br/>\n\n                <label htmlFor=\"upload-video\">\n                    <input\n                        style={{display: 'none'}}\n                        id=\"upload-video\"\n                        name=\"upload-video\"\n                        type=\"file\"\n                        onChange={e => setVideo({\n                            preview: URL.createObjectURL(e.target.files[0]),\n                            raw: e.target.files[0],\n                        })}\n                    />\n                    <br/>\n                    <br/>\n\n                    <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\"\n                            onClick={() => setVideo({preview: \"\", raw: null})}>\n                        Upload Video\n                    </Button>\n                </label>\n                {video.raw !== null && (\n                    <>\n                        <br/>\n                        <Button className={classes.button} color=\"secondary\" variant=\"contained\" component=\"span\">\n                            Remove\n                        </Button>\n                        <video className={classes.preview} autoPlay controls src={video.preview} />\n                        <br/>\n                    </>\n                )}\n                <br/>\n                <br/>\n                <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\"\n                        onClick={onSubmitHandler}>\n                    Upload\n                </Button>\n                <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\"\n                        onClick={onResetHandler}>\n                    Reset\n                </Button>\n\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}