{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.contrastText\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  });\n});\nexport default function HotVideoGridListByGoodCnt(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$initVideos = _ref.initVideos,\n      initVideos = _ref$initVideos === void 0 ? [] : _ref$initVideos;\n  var classes = useStyles();\n\n  var _useState = useState(initVideos),\n      videos = _useState[0],\n      setVideos = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, responseData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                response = axios.get(\"http://127.0.0.1:8080/api/video/order/topView\", {\n                  headers: {\n                    \"Authorization\": localStorage.getItem(\"token\")\n                  }\n                });\n                _context.next = 3;\n                return response;\n\n              case 3:\n                responseData = _context.sent.data;\n                _context.next = 6;\n                return setVideos(responseData);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    if (initVideos.length === 0) {\n      fetchData();\n    }\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(\"video\", {\n    controls: true,\n    autoplay: true,\n    src: \"https://heythere-file-store.s3.ap-northeast-2.amazonaws.com/video/videotest-%5B%E1%84%90%E1%85%B5%E1%84%87%E1%85%B5%E1%84%82%E1%85%A3%E1%86%BC%5D%20EP16-01%20%E1%84%86%E1%85%A1%E1%86%AF%E1%84%82%E1%85%A7%E1%86%AB%E1%84%8B%E1%85%A6%20%E1%84%8B%E1%85%B2%E1%84%80%E1%85%A7%E1%86%A8%E1%84%8B%E1%85%B3%E1%86%AF%20%E1%84%82%E1%85%AE%E1%84%80%E1%85%A1%20%E1%84%80%E1%85%A1%E1%86%B7%20%E1%84%8B%E1%85%B3%E1%86%BC%20%E1%84%8E%E1%85%AC%E1%84%86%E1%85%A1%E1%86%AF%E1%84%82%E1%85%A7%E1%86%AB%E1%84%8B%E1%85%B5%20%E1%84%80%E1%85%A1%E1%86%B7%E3%85%8B%20%E1%84%8B%E1%85%A5%E1%84%84%E1%85%A5%E1%87%82%E1%84%80%E1%85%A6%E1%84%83%E1%85%B3%E1%86%AB%20%E1%84%8B%E1%85%B2%E1%84%80%E1%85%A7%E1%86%A8%20%E1%84%8B%E1%85%A1%E1%86%AB%20%E1%84%80%E1%85%A1%E1%84%85%E1%85%A7%E1%84%80%E1%85%A9%20%E1%84%87%E1%85%A7%E1%86%AF%20%E1%84%8C%E1%85%B5%E1%86%BA%20%E1%84%83%E1%85%A1%E1%84%92%E1%85%A1%E1%84%82%E1%85%B3%E1%86%AB%20ssul.%20-%20%23%E1%84%91%E1%85%AE%E1%84%85%E1%85%B3%E1%86%AB%E1%84%80%E1%85%A5%E1%84%90%E1%85%A1%E1%86%B80%20120902.mp4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, videos.map(function (v) {\n    return __jsx(GridListTile, {\n      key: v.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v.thumbnailUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }), __jsx(GridListTileBar, {\n      title: v.title,\n      subtitle: v.description,\n      classes: {\n        root: classes.titleBar,\n        title: classes.title\n      },\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"star \".concat(v.title),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }\n      }, __jsx(StarBorderIcon, {\n        className: classes.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(HotVideoGridListByGoodCnt, \"lUleB5VsZCuDl1jwFEr0paya1EU=\", false, function () {\n  return [useStyles];\n});\n\n_c = HotVideoGridListByGoodCnt;\n\nHotVideoGridListByGoodCnt.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var response, responseData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('token: ', localStorage.getItem(\"token\"));\n            response = axios.get(\"http://127.0.0.1:8080/api/video/order/topView\", {\n              headers: {\n                \"Authorization\": localStorage.getItem(\"token\")\n              }\n            });\n            _context2.next = 4;\n            return response;\n\n          case 4:\n            responseData = _context2.sent.data;\n            console.log('res : ', responseData);\n            return _context2.abrupt(\"return\", {\n              initVideos: responseData\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"HotVideoGridListByGoodCnt\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","axios","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","HotVideoGridListByGoodCnt","initVideos","classes","videos","setVideos","fetchData","response","get","headers","localStorage","getItem","responseData","data","length","map","v","id","thumbnailUrl","description","getInitialProps","ctx","console","log"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Theme, createStyles, makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nimport {NextPageContext} from \"next\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\nexport default function HotVideoGridListByGoodCnt({initVideos = []}) {\n    const classes = useStyles();\n\n    const [videos, setVideos] = useState(initVideos);\n\n\n    useEffect( () => {\n        async function fetchData() {\n            const response = axios.get(\"http://127.0.0.1:8080/api/video/order/topView\",\n                {\n                    headers: {\n                        \"Authorization\": localStorage.getItem(\"token\"),\n                    }\n                }\n            )\n            const responseData: VideoResponseDto[] = (await response).data;\n\n            await setVideos(responseData);\n        }\n\n        if (initVideos.length === 0) {\n            fetchData();\n        }\n    })\n\n    return (\n        <div className={classes.root}>\n            <video controls autoplay src=\"https://heythere-file-store.s3.ap-northeast-2.amazonaws.com/video/videotest-%5B%E1%84%90%E1%85%B5%E1%84%87%E1%85%B5%E1%84%82%E1%85%A3%E1%86%BC%5D%20EP16-01%20%E1%84%86%E1%85%A1%E1%86%AF%E1%84%82%E1%85%A7%E1%86%AB%E1%84%8B%E1%85%A6%20%E1%84%8B%E1%85%B2%E1%84%80%E1%85%A7%E1%86%A8%E1%84%8B%E1%85%B3%E1%86%AF%20%E1%84%82%E1%85%AE%E1%84%80%E1%85%A1%20%E1%84%80%E1%85%A1%E1%86%B7%20%E1%84%8B%E1%85%B3%E1%86%BC%20%E1%84%8E%E1%85%AC%E1%84%86%E1%85%A1%E1%86%AF%E1%84%82%E1%85%A7%E1%86%AB%E1%84%8B%E1%85%B5%20%E1%84%80%E1%85%A1%E1%86%B7%E3%85%8B%20%E1%84%8B%E1%85%A5%E1%84%84%E1%85%A5%E1%87%82%E1%84%80%E1%85%A6%E1%84%83%E1%85%B3%E1%86%AB%20%E1%84%8B%E1%85%B2%E1%84%80%E1%85%A7%E1%86%A8%20%E1%84%8B%E1%85%A1%E1%86%AB%20%E1%84%80%E1%85%A1%E1%84%85%E1%85%A7%E1%84%80%E1%85%A9%20%E1%84%87%E1%85%A7%E1%86%AF%20%E1%84%8C%E1%85%B5%E1%86%BA%20%E1%84%83%E1%85%A1%E1%84%92%E1%85%A1%E1%84%82%E1%85%B3%E1%86%AB%20ssul.%20-%20%23%E1%84%91%E1%85%AE%E1%84%85%E1%85%B3%E1%86%AB%E1%84%80%E1%85%A5%E1%84%90%E1%85%A1%E1%86%B80%20120902.mp4\"></video>\n            <GridList className={classes.gridList} cols={4.5}>\n                {videos.map((v) => (\n                    <GridListTile key={v.id}>\n                        <img src={v.thumbnailUrl}/>\n                        <GridListTileBar\n                            title={v.title}\n                            subtitle={v.description}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${v.title}`}>\n                                    <StarBorderIcon className={classes.title}/>\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nHotVideoGridListByGoodCnt.getInitialProps = async (ctx: NextPageContext) => {\n\n    console.log('token: ',localStorage.getItem(\"token\"))\n    const response = axios.get(\"http://127.0.0.1:8080/api/video/order/topView\",\n        {\n            headers: {\n                \"Authorization\": localStorage.getItem(\"token\"),\n            }\n        }\n    )\n    const responseData: VideoResponseDto[] = (await response).data;\n    console.log('res : ', responseData)\n    return {initVideos: responseData}\n}"]},"metadata":{},"sourceType":"module"}