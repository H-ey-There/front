{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.contrastText\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\nconst tileData = [{\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/400x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/200x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}];\nexport default function HotVideoGridListByGoodCnt({\n  videos\n}) {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, tileData.map(tile => __jsx(GridListTile, {\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), __jsx(GridListTileBar, {\n    title: tile.title,\n    subtitle: \"asdfasdf\",\n    classes: {\n      root: classes.titleBar,\n      title: classes.title\n    },\n    actionIcon: __jsx(IconButton, {\n      \"aria-label\": `star ${tile.title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, __jsx(StarBorderIcon, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }), __jsx(StarBorderIcon, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }), __jsx(StarBorderIcon, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  })))));\n}\n\nHotVideoGridListByGoodCnt.getInitialProps = async ctx => {\n  const videos = axios.get(\"/order/goodCount\", {\n    headers: {\n      \"Authorization\": localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    const {\n      status,\n      data\n    } = res;\n    console.log(`status : ${status}`);\n    return data;\n  }).catch(err => console.log(err));\n  return videos;\n};","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","axios","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","tileData","img","author","HotVideoGridListByGoodCnt","videos","classes","map","tile","getInitialProps","ctx","get","headers","localStorage","getItem","then","res","status","data","console","log","catch","err"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nimport {NextPageContext} from \"next\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\nconst tileData = [\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/400x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/200x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n]\n\n\nexport default function HotVideoGridListByGoodCnt({videos}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4.5}>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title} />\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={\"asdfasdf\"}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${tile.title}`}>\n                                    <StarBorderIcon className={classes.title} />\n                                    <StarBorderIcon className={classes.title} />\n                                    <StarBorderIcon className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nHotVideoGridListByGoodCnt.getInitialProps = async (ctx:NextPageContext) => {\n    const videos: Promise<VideoResponseDto[]> = axios.get(\"/order/goodCount\",\n        {\n            headers: {\n                \"Authorization\": localStorage.getItem(\"token\"),\n            }\n        }\n    ).then(res => {\n        const {status, data} = res;\n        console.log(`status : ${status}`)\n        return data;\n    }).catch(err => console.log(err));\n\n    return videos;\n}"]},"metadata":{},"sourceType":"module"}