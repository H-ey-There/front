{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nexport default function Video() {\n  const {\n    0: video,\n    1: setVideo\n  } = useState(data);\n  const router = useRouter();\n  const {\n    0: id,\n    1: setId\n  } = useState(0);\n  useEffect(() => {\n    if (!sessionStorage.getItem(\"token\")) {\n      window.alert(\"로그인페이지로 이동합니다\");\n      window.location.href = \"/login\";\n    }\n\n    async function loadData() {\n      console.log('hihi : ', router.query.id);\n\n      if (router.query.id !== undefined) {\n        setId(Number(localStorage.getItem(\"id\")));\n        console.log(`http://localhost:8082/video/${router.query.id}`);\n        const response = await fetch(`http://localhost:8082/video/${router.query.id}?requestUserId=${id}`);\n        const data = await response.json();\n        console.log('data: ', data);\n        await setVideo(data);\n        console.log('video : ', video);\n      }\n    }\n\n    console.log('data : ', data);\n\n    if (!data) {\n      loadData();\n    }\n  }, [router.query.id]);\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), __jsx(VideoSingleContainer, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }));\n} // Video.getInitialProps = async (ctx:NextPageContext) => {\n//     const cookies = cook\n//\n//     //const { data } = await axios.get(`http://localhost:8082/video/${ctx.query.id}?requestUserId=${cookies.get(\"token\")}`);\n//\n//     return { data };\n// }","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx"],"names":["Navbar","VideoSingleContainer","useRouter","useEffect","useState","Video","video","setVideo","data","router","id","setId","sessionStorage","getItem","window","alert","location","href","loadData","console","log","query","undefined","Number","localStorage","response","fetch","json"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AA+CA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBH,QAAQ,CAAQI,IAAR,CAAlC;AACA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAA,OAACQ,EAAD;AAAA,OAAKC;AAAL,MAAcP,QAAQ,CAAC,CAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAL,EAAsC;AAClCC,MAAAA,MAAM,CAACC,KAAP,CAAa,eAAb;AACAD,MAAAA,MAAM,CAACE,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;;AAED,mBAAeC,QAAf,GAA0B;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,MAAM,CAACY,KAAP,CAAaX,EAApC;;AACA,UAAID,MAAM,CAACY,KAAP,CAAaX,EAAb,KAAoBY,SAAxB,EAAmC;AAC/BX,QAAAA,KAAK,CAACY,MAAM,CAACC,YAAY,CAACX,OAAb,CAAqB,IAArB,CAAD,CAAP,CAAL;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BX,MAAM,CAACY,KAAP,CAAaX,EAAG,EAA3D;AACA,cAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BjB,MAAM,CAACY,KAAP,CAAaX,EAAG,kBAAiBA,EAAG,EAApE,CAA5B;AACA,cAAMF,IAAU,GAAG,MAAMiB,QAAQ,CAACE,IAAT,EAAzB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,IAAtB;AACA,cAAMD,QAAQ,CAACC,IAAD,CAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBd,KAAvB;AACH;AACJ;;AAEDa,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBZ,IAAtB;;AACA,QAAI,CAACA,IAAL,EAAW;AACPU,MAAAA,QAAQ;AACX;AACJ,GAvBQ,EAuBN,CAACT,MAAM,CAACY,KAAP,CAAaX,EAAd,CAvBM,CAAT;AA0BA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,oBAAD;AAAsB,IAAA,IAAI,EAAEF,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport {useRouter} from \"next/router\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {NextPageContext} from \"next\";\nimport {parseCookies} from \"../../cookie/parseCookies\";\n\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface Video {\n    id: number;\n    title: string;\n    description: string;\n    createdAt: string;\n    modifiedAt: string;\n    thumbnailUrl: string;\n    videoUrl: string;\n    viewCount: number\n    goodStatus: boolean,\n    badStatus: boolean;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    comments: Comment[];\n}\n\nexport default function Video() {\n    const [video, setVideo] = useState<Video>(data);\n    const router = useRouter()\n    const [id, setId] = useState(0);\n\n    useEffect(() => {\n        if (!sessionStorage.getItem(\"token\")) {\n            window.alert(\"로그인페이지로 이동합니다\");\n            window.location.href = \"/login\";\n        }\n\n        async function loadData() {\n            console.log('hihi : ', router.query.id)\n            if (router.query.id !== undefined) {\n                setId(Number(localStorage.getItem(\"id\")));\n                console.log(`http://localhost:8082/video/${router.query.id}`)\n                const response = await fetch(`http://localhost:8082/video/${router.query.id}?requestUserId=${id}`);\n                const data:Video = await response.json();\n                console.log('data: ', data);\n                await setVideo(data);\n                console.log('video : ',video)\n            }\n        }\n\n        console.log('data : ',data);\n        if (!data) {\n            loadData();\n        }\n    }, [router.query.id]);\n\n\n    return (\n        <>\n            <Navbar/>\n            <VideoSingleContainer data={data}/>\n        </>\n    )\n}\n\n// Video.getInitialProps = async (ctx:NextPageContext) => {\n//     const cookies = cook\n//\n//     //const { data } = await axios.get(`http://localhost:8082/video/${ctx.query.id}?requestUserId=${cookies.get(\"token\")}`);\n//\n//     return { data };\n// }"]},"metadata":{},"sourceType":"module"}