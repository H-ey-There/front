{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.contrastText\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  });\n});\nvar tileData = [{\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/400x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/200x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'http://placehold.it/300x200',\n  title: 'Image',\n  author: 'author'\n}];\nexport default function HotVideoGridListByViewCnt() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, tileData.map(function (tile) {\n    return __jsx(GridListTile, {\n      key: tile.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), __jsx(GridListTileBar, {\n      title: tile.title,\n      classes: {\n        root: classes.titleBar,\n        title: classes.title\n      },\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"star \".concat(tile.title),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }\n      }, __jsx(StarBorderIcon, {\n        className: classes.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(HotVideoGridListByViewCnt, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = HotVideoGridListByViewCnt;\n\nHotVideoGridListByViewCnt.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var videos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            videos = axios.get(\"http://127.0.0.1/api/video/order/topView\", {\n              headers: {\n                \"Authorization\": localStorage.getItem(\"token\")\n              }\n            }).then(function (res) {\n              var status = res.status,\n                  data = res.data;\n              console.log(\"status : \".concat(status));\n              return data;\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n            return _context.abrupt(\"return\", {\n              videos: videos\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"HotVideoGridListByViewCnt\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","axios","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","tileData","img","author","HotVideoGridListByViewCnt","classes","map","tile","getInitialProps","ctx","videos","get","headers","localStorage","getItem","then","res","status","data","console","log","err"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport {ListSubheader} from \"@material-ui/core\";\nimport {NextPageContext} from \"next\";\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\nconst tileData = [\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/400x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/200x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },{\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n    {\n        img: 'http://placehold.it/300x200',\n        title: 'Image',\n        author: 'author',\n    },\n]\n\n\nexport default function HotVideoGridListByViewCnt() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4.5}>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title} />\n                        <GridListTileBar\n                            title={tile.title}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${tile.title}`}>\n                                    <StarBorderIcon className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nHotVideoGridListByViewCnt.getInitialProps = async (ctx:NextPageContext) => {\n    const videos: Promise<VideoResponseDto[]> = axios.get(\"http://127.0.0.1/api/video/order/topView\",\n        {\n            headers: {\n                \"Authorization\": localStorage.getItem(\"token\"),\n            }\n        }\n    ).then(res => {\n        const {status, data} = res;\n        console.log(`status : ${status}`)\n        return data;\n    }).catch(err => console.log(err));\n\n    return { videos };\n}"]},"metadata":{},"sourceType":"module"}