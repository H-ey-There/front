{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-single-container.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VideoSingleSidebarContainer from \"./video-single-sidebar-container\";\nimport VideoMetadataContainer from \"./video-metadata-container\";\nimport VideoCommentContainer from \"./video-comment\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexGrow: 1\n    }\n  });\n});\nexport default function VideoSingleContainer() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(),\n      video = _useState[0],\n      setVideo = _useState[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (router.asPath !== router.route) {\n      console.log(router.query.id);\n\n      if (router.query.id !== undefined) {\n        axios(\"http://localhost:8082/video/\".concat(router.query.id)).then(function (res) {\n          var status = res.status,\n              data = res.data;\n          setVideo(data);\n          console.log(video);\n        })[\"catch\"](function (err) {\n          return console.error(err);\n        });\n      }\n    }\n  }, [router.query.id]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      objectFit: 'contain'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, __jsx(\"video\", {\n    width: \"100%\",\n    controls: true,\n    src: \"#\",\n    poster: \"http://unsplash.it/250/150?gravity=center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Your browser does not support the video tag.\")), __jsx(VideoMetadataContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: '15px',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(VideoCommentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }))), __jsx(VideoSingleSidebarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  })), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"\\n            \\n  .video-description {\\n    display: inline-block; \\n    width: 100%; \\n    white-space: nowrap; \\n    overflow: hidden; \\n    text-overflow: ellipsis;\\n    white-space: normal;\\n  }\\n  .video-container {\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  \\n  .thumbnail {\\n    position: relative;\\n    display: flex;\\n  }\\n  \\n  .thumbnail::before {\\n    content: attr(data-duration);\\n    position: absolute;\\n    background-color: rgba(0, 0, 0, .85);\\n    color: white;\\n    right: 5px;\\n    bottom: 5px;\\n    padding: .1em .3em;\\n    border-radius: .3em;\\n    font-size: .9rem;\\n  }\\n  \\n  .thumbnail-image {\\n    width: 100%;\\n    height: 100%;\\n    min-width: 250px;\\n    min-height: 150px;\\n    background-color: #AAA;\\n  }\\n  \\n  .video-bottom-section {\\n    display: flex;\\n    align-items: flex-start;\\n    margin-top: 1rem;\\n  }\\n  \\n  .channel-icon {\\n    margin-right: .75rem;\\n    border-radius: 50%;\\n    width: 36px;\\n    height: 36px;\\n    background-color: #AAA;\\n  }\\n  \\n  .video-details {\\n    display: flex;\\n    flex-direction: column;\\n    margin-left: 20px;\\n  }\\n  \\n  .video-title {\\n    font-size: 1.1rem;\\n    font-weight: bold;\\n    margin-bottom: .5rem;\\n    text-decoration: none;\\n    color: black;\\n  }\\n  \\n  .video-channel-name {\\n    margin-bottom: .1rem;\\n    text-decoration: none;\\n    transition: color 150ms;\\n  }\\n  \\n  .video-channel-name:hover {\\n    color: #111;\\n  }\\n  \\n  .video-channel-name,\\n  .video-metadata {\\n    color: #555;\\n  }\\n  \"));\n}\n\n_s(VideoSingleContainer, \"bc3aNLO7eM8FrSUkFEOPtQWbg4w=\", false, function () {\n  return [useStyles, useRouter];\n});\n\n_c = VideoSingleContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoSingleContainer\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-single-container.tsx"],"names":["React","useState","useEffect","makeStyles","createStyles","Grid","VideoSingleSidebarContainer","VideoMetadataContainer","VideoCommentContainer","axios","useRouter","useStyles","theme","root","flexGrow","VideoSingleContainer","classes","video","setVideo","router","asPath","route","console","log","query","id","undefined","then","res","status","data","err","error","objectFit","margin","padding"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAA8C,0BAA9C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,2BAAP,MAAwC,kCAAxC;AACA,OAAOC,sBAAP,MAAmC,4BAAnC;AACA,OAAOC,qBAAP,MAAkC,iBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,IAAMC,SAAS,GAAGR,UAAU,CAAC,UAACS,KAAD;AAAA,SACzBR,YAAY,CAAC;AACTS,IAAAA,IAAI,EAAE;AACFC,MAAAA,QAAQ,EAAE;AADR;AADG,GAAD,CADa;AAAA,CAAD,CAA5B;AAiDA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC3C,MAAMC,OAAO,GAAGL,SAAS,EAAzB;;AAD2C,kBAEhBV,QAAQ,EAFQ;AAAA,MAEpCgB,KAFoC;AAAA,MAE7BC,QAF6B;;AAG3C,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGiB,MAAM,CAACC,MAAP,KAAkBD,MAAM,CAACE,KAA5B,EAAmC;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,KAAP,CAAaC,EAAzB;;AACA,UAAIN,MAAM,CAACK,KAAP,CAAaC,EAAb,KAAoBC,SAAxB,EAAmC;AAC/BjB,QAAAA,KAAK,uCAAgCU,MAAM,CAACK,KAAP,CAAaC,EAA7C,EAAL,CACKE,IADL,CACU,UAAAC,GAAG,EAAI;AAAA,cACFC,MADE,GACcD,GADd,CACFC,MADE;AAAA,cACMC,IADN,GACcF,GADd,CACME,IADN;AAETZ,UAAAA,QAAQ,CAACY,IAAD,CAAR;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,SALL,WAMW,UAAAc,GAAG;AAAA,iBAAIT,OAAO,CAACU,KAAR,CAAcD,GAAd,CAAJ;AAAA,SANd;AAOH;AACJ;AACJ,GAbQ,EAaN,CAACZ,MAAM,CAACK,KAAP,CAAaC,EAAd,CAbM,CAAT;AAgBA,SACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AACRoB,MAAAA,SAAS,EAAE;AADH,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AAAO,IAAA,KAAK,QAAZ;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,GAAG,EAAC,GAAnC;AAAuC,IAAA,MAAM,EAAC,2CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAHJ,CADJ,EASI,MAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,MAAT;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,CADJ,EAmBI,MAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,++CAvBJ,CADJ;AA6GH;;GAlIuBpB,oB;UACJJ,S,EAEDD,S;;;KAHKK,oB","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VideoSingleSidebarContainer from \"./video-single-sidebar-container\";\nimport VideoMetadataContainer from \"./video-metadata-container\";\nimport VideoCommentContainer from \"./video-comment\";\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    }),\n);\n\n\ninterface LargeComment {\n  id: number;\n  comment: string;\n  createdAt: string;\n  modifiedAt: string;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n}\n\ninterface Comment {\n  id: number;\n  comment: string;\n  createdAt: string;\n  modifiedAt: string;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n  largeComments: LargeComment[];\n}\ninterface Video {\n  id: number;\n  title: string;\n  description: string;\n  createdAt: string;\n  modifiedAt: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  viewCount: number\n  goodStatus: boolean,\n  badStatus: boolean;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n  comments : Comment[];\n}\n\nexport default function VideoSingleContainer() {\n    const classes = useStyles();\n    const [video, setVideo] =  useState<Video>();\n    const router = useRouter()\n\n    useEffect(() => {\n        if(router.asPath !== router.route) {\n            console.log(router.query.id)\n            if (router.query.id !== undefined) {\n                axios(`http://localhost:8082/video/${router.query.id}`)\n                    .then(res => {\n                        const {status, data} = res;\n                        setVideo(data);\n                        console.log(video);\n                    })\n                    .catch(err => console.error(err));\n            }\n        }\n    }, [router.query.id])\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={9}>\n                    <div style={{\n                        objectFit: 'contain'\n                    }}>\n                        <video width={`100%`} controls src=\"#\" poster=\"http://unsplash.it/250/150?gravity=center\">\n                            Your browser does not support the video tag.\n                        </video>\n                    </div>\n\n                    <VideoMetadataContainer />\n\n                    <hr/>\n                    <div style={{margin: '15px', padding: '10px'}}>\n                        <VideoCommentContainer />\n                    </div>\n\n\n                </Grid>\n                <VideoSingleSidebarContainer />\n            </Grid>\n\n            <style>{`\n            \n  .video-description {\n    display: inline-block; \n    width: 100%; \n    white-space: nowrap; \n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  .video-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .thumbnail {\n    position: relative;\n    display: flex;\n  }\n  \n  .thumbnail::before {\n    content: attr(data-duration);\n    position: absolute;\n    background-color: rgba(0, 0, 0, .85);\n    color: white;\n    right: 5px;\n    bottom: 5px;\n    padding: .1em .3em;\n    border-radius: .3em;\n    font-size: .9rem;\n  }\n  \n  .thumbnail-image {\n    width: 100%;\n    height: 100%;\n    min-width: 250px;\n    min-height: 150px;\n    background-color: #AAA;\n  }\n  \n  .video-bottom-section {\n    display: flex;\n    align-items: flex-start;\n    margin-top: 1rem;\n  }\n  \n  .channel-icon {\n    margin-right: .75rem;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    background-color: #AAA;\n  }\n  \n  .video-details {\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n  }\n  \n  .video-title {\n    font-size: 1.1rem;\n    font-weight: bold;\n    margin-bottom: .5rem;\n    text-decoration: none;\n    color: black;\n  }\n  \n  .video-channel-name {\n    margin-bottom: .1rem;\n    text-decoration: none;\n    transition: color 150ms;\n  }\n  \n  .video-channel-name:hover {\n    color: #111;\n  }\n  \n  .video-channel-name,\n  .video-metadata {\n    color: #555;\n  }\n  `}</style>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}