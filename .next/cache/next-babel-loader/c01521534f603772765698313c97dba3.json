{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport cookieCutter from 'cookie-cutter';\nimport LargeCommentList from \"../comment/large-comment-container\";\nimport axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      marginLeft: '50px',\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline'\n    }\n  });\n});\nexport default function VideoLargeCommentContainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var cId = _ref.cId,\n      largeComments = _ref.largeComments;\n\n  var _useState = useState(largeComments),\n      largeCommentList = _useState[0],\n      setLargeCommentList = _useState[1];\n\n  var classes = useStyles();\n\n  var _useState2 = useState(\"\"),\n      largeComment = _useState2[0],\n      setLargeComment = _useState2[1];\n\n  function submitHandler(_x) {\n    return _submitHandler.apply(this, arguments);\n  }\n\n  function _submitHandler() {\n    _submitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var payload, _yield$axios$post, status, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (largeComment.length < 3) {\n                window.alert(\"입력이 너무 적습니다\");\n                setLargeComment(\"\");\n              }\n\n              ;\n              payload = {\n                requestUserId: Number(cookieCutter.get(\"id\")),\n                commentId: cId,\n                largeComment: largeComment\n              };\n              _context.next = 6;\n              return axios.post(\"http://localhost:8082/registration/comment\", payload);\n\n            case 6:\n              _yield$axios$post = _context.sent;\n              status = _yield$axios$post.status;\n\n              if (!(status === 201)) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 11;\n              return axios.get(\"http://localhost:8082/comment/\".concat(cId, \"/largeComment\"));\n\n            case 11:\n              response = _context.sent;\n              setLargeCommentList(response.data);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitHandler.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: function onClick(e) {\n      return submitHandler;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, largeComments.length > 0 && largeCommentList.map(function (c, index) {\n    return __jsx(React.Fragment, null, __jsx(ListItem, {\n      key: c.id,\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      href: \"/community/\".concat(c.userId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, __jsx(Avatar, {\n      alt: c.name,\n      src: c.userImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }))), __jsx(ListItemText, {\n      primary: c.name,\n      secondary: __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 41\n        }\n      }), c.comment),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 30\n      }\n    }));\n  })));\n}\n\n_s(VideoLargeCommentContainer, \"aIityheplYyGLCWJST5NONWbukA=\", false, function () {\n  return [useStyles];\n});\n\n_c = VideoLargeCommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoLargeCommentContainer\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx"],"names":["createStyles","makeStyles","List","ListItem","ListItemAvatar","Avatar","ListItemText","React","useState","Typography","Divider","Button","TextField","cookieCutter","LargeCommentList","axios","useStyles","theme","root","marginLeft","width","backgroundColor","palette","background","paper","inline","display","VideoLargeCommentContainer","cId","largeComments","largeCommentList","setLargeCommentList","classes","largeComment","setLargeComment","submitHandler","e","preventDefault","length","window","alert","payload","requestUserId","Number","get","commentId","post","status","response","data","map","c","index","id","userId","name","userImg","comment"],"mappings":"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","sourcesContent":["import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React,{useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport cookieCutter from 'cookie-cutter'\nimport LargeCommentList from \"../comment/large-comment-container\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: '50px',\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\n\ninterface LargeCommentList {\n    cId: number\n    largeComments: LargeComment[];\n}\n\ninterface LargeCommentRegisterRequestDto {\n    requestUserId:number;\n    commentId:number;\n    largeComment:string;\n}\n\nexport default function VideoLargeCommentContainer({cId, largeComments}:LargeCommentList) {\n    const [largeCommentList, setLargeCommentList] = useState(largeComments);\n    const classes = useStyles();\n    const [largeComment, setLargeComment] = useState(\"\");\n\n    async function submitHandler(e: MouseEvent) {\n        e.preventDefault();\n        if (largeComment.length < 3) {\n            window.alert(\"입력이 너무 적습니다\");\n            setLargeComment(\"\");\n        };\n\n        const payload:LargeCommentRegisterRequestDto = {\n            requestUserId : Number(cookieCutter.get(\"id\")),\n            commentId: cId,\n            largeComment: largeComment\n        };\n\n        const { status } = await axios.post(\"http://localhost:8082/registration/comment\",payload);\n        if (status === 201) {\n            const response = await axios.get(`http://localhost:8082/comment/${cId}/largeComment`)\n            setLargeCommentList(response.data);\n        }\n    }\n\n    return (\n        <>\n            <form>\n                <TextField style={{width: '100%'}} label=\"Leave Your Comment Here..!\"/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\" onClick={(e) => submitHandler}>\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n            <List className={classes.root}>\n                {largeComments.length > 0 && largeCommentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}