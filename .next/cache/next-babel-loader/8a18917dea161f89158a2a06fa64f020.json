{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.contrastText\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\nexport default function HotVideoGridListByViewCnt({\n  videos\n}) {\n  const classes = useStyles();\n  const {\n    0: videosList,\n    1: setVideos\n  } = useState(videos);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, videosList.map(v => __jsx(GridListTile, {\n    key: v.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(\"video\", {\n    muted: true,\n    autoPlay: true,\n    width: \"100%\",\n    src: v.videoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), __jsx(GridListTileBar, {\n    title: v.title,\n    subtitle: v.viewCount,\n    classes: {\n      root: classes.titleBar,\n      title: classes.title\n    },\n    actionIcon: __jsx(IconButton, {\n      \"aria-label\": `star ${v.title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, __jsx(Avatar, {\n      src: v.userImg,\n      alt: v.name,\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  })))));\n}\n\nHotVideoGridListByViewCnt.getInitialProps = async ctx => {\n  const videos = axios.get(\"http://127.0.0.1/api/video/order/topView\", {\n    headers: {\n      \"Authorization\": localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    const {\n      status,\n      data\n    } = res;\n    console.log(`status : ${status}`);\n    return data;\n  }).catch(err => console.log(err));\n  return {\n    videos: videos\n  };\n};","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx"],"names":["React","useState","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","Avatar","axios","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","HotVideoGridListByViewCnt","videos","classes","videosList","setVideos","map","v","id","videoUrl","viewCount","userImg","name","getInitialProps","ctx","get","headers","localStorage","getItem","then","res","status","data","console","log","catch","err"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Avatar, ListSubheader} from \"@material-ui/core\";\nimport {NextPageContext} from \"next\";\nimport axios from \"axios\";\nimport {VideoResponseDto} from \"../../api/video/VideoResponseDto\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\n\n\nexport default function HotVideoGridListByViewCnt({videos}) {\n    const classes = useStyles();\n    const [videosList, setVideos] = useState(videos)\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4.5}>\n                {videosList.map((v) => (\n                    <GridListTile key={v.id}>\n                        <video muted autoPlay={true} width=\"100%\" src={v.videoUrl}  />\n                        <GridListTileBar\n                            title={v.title}\n                            subtitle={v.viewCount}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${v.title}`}>\n                                    <Avatar src={v.userImg} alt={v.name}  className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nHotVideoGridListByViewCnt.getInitialProps = async (ctx:NextPageContext) => {\n    const videos: Promise<VideoResponseDto[]> = axios.get(\"http://127.0.0.1/api/video/order/topView\",\n        {\n            headers: {\n                \"Authorization\": localStorage.getItem(\"token\"),\n            }\n        }\n    ).then(res => {\n        const {status, data} = res;\n        console.log(`status : ${status}`)\n        return data;\n    }).catch(err => console.log(err));\n\n    return { videos: videos };\n}"]},"metadata":{},"sourceType":"module"}