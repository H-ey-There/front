{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/VideoPlayList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    maxHeight: '1000px',\n    overflowY: 'scroll',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    height: '100%',\n    maxHeight: '1000px',\n    overflowY: 'scroll'\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\nconst tileData = [{\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}, {\n  img: 'http://placehold.it/100x100',\n  title: 'title',\n  author: 'min'\n}];\nexport default function VideoPlayList() {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    cellHeight: 180,\n    className: classes.gridList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(GridListTile, {\n    key: \"Subheader\",\n    cols: 2,\n    style: {\n      height: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, __jsx(ListSubheader, {\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Play List\")), tileData.map(tile => __jsx(GridListTile, {\n    key: tile.img,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: tile.img,\n    alt: tile.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }), __jsx(GridListTileBar, {\n    title: tile.title,\n    subtitle: __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 39\n      }\n    }, \"by: \", tile.author),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/VideoPlayList.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","useStyles","theme","root","display","flexWrap","justifyContent","maxHeight","overflowY","backgroundColor","palette","background","paper","gridList","height","icon","color","tileData","img","title","author","VideoPlayList","classes","map","tile"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAgBC,YAAhB,EAA8BC,UAA9B,QAAgD,0BAAhD;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAIA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,IACzBP,YAAY,CAAC;AACTQ,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,cAAc,EAAE,cAHd;AAIFC,IAAAA,SAAS,EAAE,QAJT;AAKFC,IAAAA,SAAS,EAAE,QALT;AAMFC,IAAAA,eAAe,EAAEP,KAAK,CAACQ,OAAN,CAAcC,UAAd,CAAyBC;AANxC,GADG;AASTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,MADF;AAENP,IAAAA,SAAS,EAAE,QAFL;AAGNC,IAAAA,SAAS,EAAE;AAHL,GATD;AAcTO,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE;AADL;AAdG,CAAD,CADY,CAA5B;AAqBA;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,QAAQ,GAAG,CACb;AACIC,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CADa,EAMb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CANa,EAWb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CAXa,EAgBb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CAhBa,EAqBb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CArBa,EA0Bb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CA1Ba,EA+Bb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CA/Ba,EAoCb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CApCa,EAyCb;AACIF,EAAAA,GAAG,EAAE,6BADT;AAEIC,EAAAA,KAAK,EAAE,OAFX;AAGIC,EAAAA,MAAM,EAAE;AAHZ,CAzCa,CAAjB;AAgDA,eAAe,SAASC,aAAT,GAAyB;AACpC,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AAEA,SACI;AAAK,IAAA,SAAS,EAAEqB,OAAO,CAACnB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA2B,IAAA,SAAS,EAAEmB,OAAO,CAACT,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,YAAD;AAAc,IAAA,GAAG,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAE,CAApC;AAAuC,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,EAIKG,QAAQ,CAACM,GAAT,CAAcC,IAAD,IACV,MAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACN,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEM,IAAI,CAACN,GAAf;AAAoB,IAAA,GAAG,EAAEM,IAAI,CAACL,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,eAAD;AACI,IAAA,KAAK,EAAEK,IAAI,CAACL,KADhB;AAEI,IAAA,QAAQ,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWK,IAAI,CAACJ,MAAhB,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,CAJL,CADJ,CADJ;AAkBH","sourcesContent":["import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            maxHeight: '1000px',\n            overflowY: 'scroll',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            height: '100%',\n            maxHeight: '1000px',\n            overflowY: 'scroll'\n        },\n        icon: {\n            color: 'rgba(255, 255, 255, 0.54)',\n        },\n    }),\n);\n\n/**\n * The example data is structured as follows:\n *\n * import image from 'path/to/image.jpg';\n * [etc...]\n *\n * const tileData = [\n *   {\n *     img: image,\n *     title: 'Image',\n *     author: 'author',\n *   },\n *   {\n *     [etc...]\n *   },\n * ];\n */\n\n\nconst tileData = [\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n    {\n        img: 'http://placehold.it/100x100',\n        title: 'title',\n        author: 'min'\n    },\n\n]\nexport default function VideoPlayList() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={180} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                    <ListSubheader component=\"div\">Play List</ListSubheader>\n                </GridListTile>\n                {tileData.map((tile) => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img} alt={tile.title} />\n                        <GridListTileBar\n                            title={tile.title}\n                            subtitle={<span>by: {tile.author}</span>}\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}