{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx\";\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport LargeCommentList from \"../comment/large-comment-container\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    marginLeft: '50px',\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function VideoLargeCommentContainer({\n  largeComments\n}) {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: largeCommentList,\n    1: setLargeCommentList\n  } = useState(largeComments);\n  const classes = useStyles();\n  const {\n    0: largeComment,\n    1: setLargeComment\n  } = useState(\"\");\n  console.log('largecomment :', largeComments);\n  console.log('largecomment : ', largeCommentList);\n\n  async function submitHandler() {\n    //const {data} = axios.post()\n    if (largeComment.length < 3) {\n      window.alert(\"입력이 너무 적습니다\");\n      setLargeComment(\"\");\n    }\n\n    ;\n    const payload = {\n      requestUserId: Number(localStorage.getItem(\"id\")),\n      videoId: 1,\n      largeComment: largeComment\n    };\n    const {\n      status\n    } = await axios.post(\"http://localhost:8082/registration/comment\", payload);\n\n    if (status === 201) {\n      const response = await axios.get(`video/${Number(router.query.id)}/comments`);\n      setCommentList(response.data);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, largeComments.length > 0 && largeCommentList.map((c, index) => __jsx(React.Fragment, null, __jsx(ListItem, {\n    key: c.id,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    href: `/community/${c.userId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, __jsx(Avatar, {\n    alt: c.name,\n    src: c.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }))), __jsx(ListItemText, {\n    primary: c.name,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }), c.comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  })), __jsx(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx"],"names":["createStyles","makeStyles","List","ListItem","ListItemAvatar","Avatar","ListItemText","React","useState","Typography","Divider","Button","TextField","useRouter","LargeCommentList","axios","useStyles","theme","root","marginLeft","width","backgroundColor","palette","background","paper","inline","display","VideoLargeCommentContainer","largeComments","query","largeCommentList","setLargeCommentList","classes","largeComment","setLargeComment","console","log","submitHandler","length","window","alert","payload","requestUserId","Number","localStorage","getItem","videoId","status","post","response","get","router","id","setCommentList","data","map","c","index","userId","name","userImg","comment"],"mappings":";;AAAA,SAAQA,YAAR,EAAsBC,UAAtB,QAA8C,0BAA9C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,mBAAhC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,IACzBjB,YAAY,CAAC;AACTkB,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,MADV;AAEFC,IAAAA,KAAK,EAAE,MAFL;AAGFC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHxC,GADG;AAMTC,EAAAA,MAAM,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AANC,CAAD,CADY,CAA5B;AAoCA,eAAe,SAASC,0BAAT,CAAoC;AAACC,EAAAA;AAAD,CAApC,EAAsE;AACjF,QAAM;AAACC,IAAAA;AAAD,MAAUhB,SAAS,EAAzB;AACA,QAAM;AAAA,OAACiB,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CvB,QAAQ,CAACoB,aAAD,CAAxD;AACA,QAAMI,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM;AAAA,OAACiB,YAAD;AAAA,OAAeC;AAAf,MAAkC1B,QAAQ,CAAC,EAAD,CAAhD;AACA2B,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,aAA9B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,gBAA/B;;AAEA,iBAAeO,aAAf,GAA+B;AAC3B;AACA,QAAIJ,YAAY,CAACK,MAAb,GAAsB,CAA1B,EAA6B;AACzBC,MAAAA,MAAM,CAACC,KAAP,CAAa,aAAb;AACAN,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH;;AAAA;AAED,UAAMO,OAAsC,GAAG;AAC3CC,MAAAA,aAAa,EAAGC,MAAM,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CADqB;AAE3CC,MAAAA,OAAO,EAAE,CAFkC;AAG3Cb,MAAAA,YAAY,EAAEA;AAH6B,KAA/C;AAMA,UAAM;AAAEc,MAAAA;AAAF,QAAa,MAAMhC,KAAK,CAACiC,IAAN,CAAW,4CAAX,EAAwDP,OAAxD,CAAzB;;AACA,QAAIM,MAAM,KAAK,GAAf,EAAoB;AAChB,YAAME,QAAQ,GAAG,MAAMlC,KAAK,CAACmC,GAAN,CAAW,SAAQP,MAAM,CAACQ,MAAM,CAACtB,KAAP,CAAauB,EAAd,CAAkB,WAA3C,CAAvB;AACAC,MAAAA,cAAc,CAACJ,QAAQ,CAACK,IAAV,CAAd;AACH;AACJ;;AAED,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAClC,MAAAA,KAAK,EAAE;AAAR,KAAlB;AAAmC,IAAA,KAAK,EAAC,4BAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAMI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CADJ,EAUI,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEY,OAAO,CAACd,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,aAAa,CAACU,MAAd,GAAuB,CAAvB,IAA4BR,gBAAgB,CAACyB,GAAjB,CAAqB,CAACC,CAAD,EAAGC,KAAH,KAC9C,4BACI,MAAC,QAAD;AAAU,IAAA,GAAG,EAAED,CAAC,CAACJ,EAAjB;AAAqB,IAAA,UAAU,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAG,cAAaI,CAAC,CAACE,MAAO,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEF,CAAC,CAACG,IAAf;AAAqB,IAAA,GAAG,EAAEH,CAAC,CAACI,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,MAAC,YAAD;AACI,IAAA,OAAO,EAAEJ,CAAC,CAACG,IADf;AAEI,IAAA,SAAS,EACL,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACI,MAAA,SAAS,EAAC,MADd;AAEI,MAAA,OAAO,EAAC,OAFZ;AAGI,MAAA,SAAS,EAAE3B,OAAO,CAACP,MAHvB;AAII,MAAA,KAAK,EAAC,aAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQK+B,CAAC,CAACK,OARP,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ,EAuBI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,EAwBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBT,CADyB,CADjC,CAVJ,CADJ;AA2CH","sourcesContent":["import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React,{useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {useRouter} from \"next/router\";\nimport LargeCommentList from \"../comment/large-comment-container\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: '50px',\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\n\ninterface LargeCommentList {\n    largeComments: LargeComment[];\n}\n\ninterface LargeCommentRegisterRequestDto {\n    requestUserId:number;\n    commentId:number;\n    largeComment:string;\n}\n\nexport default function VideoLargeCommentContainer({largeComments}:LargeCommentList) {\n    const {query} = useRouter();\n    const [largeCommentList, setLargeCommentList] = useState(largeComments);\n    const classes = useStyles();\n    const [largeComment, setLargeComment] = useState(\"\");\n    console.log('largecomment :', largeComments);\n    console.log('largecomment : ', largeCommentList)\n\n    async function submitHandler() {\n        //const {data} = axios.post()\n        if (largeComment.length < 3) {\n            window.alert(\"입력이 너무 적습니다\");\n            setLargeComment(\"\");\n        };\n\n        const payload:LargeCommentRegisterRequestDto = {\n            requestUserId : Number(localStorage.getItem(\"id\")),\n            videoId: 1,\n            largeComment: largeComment\n        };\n\n        const { status } = await axios.post(\"http://localhost:8082/registration/comment\",payload);\n        if (status === 201) {\n            const response = await axios.get(`video/${Number(router.query.id)}/comments`)\n            setCommentList(response.data);\n        }\n    }\n\n    return (\n        <>\n            <form>\n                <TextField style={{width: '100%'}} label=\"Leave Your Comment Here..!\"/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\">\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n            <List className={classes.root}>\n                {largeComments.length > 0 && largeCommentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}