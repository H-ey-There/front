{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-comment.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport VideoLargeCommentContainer from \"./video-large-comment\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function VideoCommentContainer({\n  comments\n}) {\n  const router = useRouter();\n  const classes = useStyles();\n  const {\n    0: commentList,\n    1: setCommentList\n  } = useState(comments);\n  const {\n    0: comment,\n    1: setComment\n  } = useState(\"\");\n\n  async function submitHandler() {\n    //const {data} = axios.post()\n    if (comment.length < 3) {\n      window.alert(\"입력이 너무 적습니다\");\n      setComment(\"\");\n    }\n\n    ;\n    const payload = {\n      requestUserId: Number(localStorage.getItem(\"id\")),\n      videoId: Number(router.query.id),\n      comment: comment\n    };\n    const {\n      status,\n      data\n    } = await axios.post(\"http://localhost:8082/registration/comment\", payload);\n\n    if (status === 201) {}\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Comments\"), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, commentList.map((c, index) => __jsx(React.Fragment, null, __jsx(ListItem, {\n    key: c.id,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    href: `/community/${c.userId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, __jsx(Avatar, {\n    alt: c.name,\n    src: c.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 37\n    }\n  }))), __jsx(ListItemText, {\n    primary: c.name,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }), c.comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  })), __jsx(VideoLargeCommentContainer, {\n    largeComments: c.largeComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }), __jsx(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-comment.tsx"],"names":["React","useState","createStyles","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","VideoLargeCommentContainer","Button","TextField","axios","useRouter","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","VideoCommentContainer","comments","router","classes","commentList","setCommentList","comment","setComment","submitHandler","length","window","alert","payload","requestUserId","Number","localStorage","getItem","videoId","query","id","status","data","post","e","target","value","map","c","index","userId","name","userImg","largeComments"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport VideoLargeCommentContainer from \"./video-large-comment\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface CommentList {\n    comments: Comment[];\n}\n\ninterface CommentRegisterRequestDto {\n    requestUserId:number;\n    videoId:number;\n    comment:string;\n}\n\nexport default function VideoCommentContainer({comments}:CommentList) {\n\n    const router = useRouter();\n    const classes = useStyles();\n    const [commentList, setCommentList] = useState(comments)\n    const [comment, setComment] = useState(\"\");\n    async function submitHandler() {\n        //const {data} = axios.post()\n        if (comment.length < 3) {\n            window.alert(\"입력이 너무 적습니다\");\n            setComment(\"\");\n        };\n\n        const payload:CommentRegisterRequestDto = {\n            requestUserId : Number(localStorage.getItem(\"id\")),\n            videoId: Number(router.query.id),\n            comment: comment\n        };\n\n        const {status, data} = await axios.post(\"http://localhost:8082/registration/comment\",payload);\n        if (status === 201) {\n            \n        }\n\n    }\n\n    return (\n        <>\n            <form>\n                <TextField style={{ width: '100%'}} label=\"Leave Your Comment Here..!\"\n                onChange={e => setComment(e.target.value)}/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\" onClick={submitHandler}>\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n\n            <h3>Comments</h3>\n            <List className={classes.root}>\n                {commentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <VideoLargeCommentContainer largeComments={c.largeComments}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}