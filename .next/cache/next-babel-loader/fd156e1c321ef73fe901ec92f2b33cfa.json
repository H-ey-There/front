{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.contrastText\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  });\n});\nexport default function HotVideoGridListByViewCnt(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$videos = _ref.videos,\n      videos = _ref$videos === void 0 ? [] : _ref$videos;\n  var router = useRouter();\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, videos.map(function (v) {\n    return __jsx(GridListTile, {\n      key: v.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, __jsx(\"video\", {\n      muted: true,\n      autoPlay: true,\n      width: \"100%\",\n      src: v.videoUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }), __jsx(GridListTileBar, {\n      title: v.title,\n      subtitle: v.viewCount,\n      classes: {\n        root: classes.titleBar,\n        title: classes.title\n      },\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"star \".concat(v.title),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, __jsx(Avatar, {\n        src: v.userImg,\n        alt: v.name,\n        className: classes.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(HotVideoGridListByViewCnt, \"udxARlSzUQQ8jg2GSLXYjtUi3ZI=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = HotVideoGridListByViewCnt;\nexport function getStaticProps() {\n  return _getStaticProps.apply(this, arguments);\n}\n\nfunction _getStaticProps() {\n  _getStaticProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var videos;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"http://127.0.0.1/api/video/order/topView\", {\n              headers: {\n                \"Authorization\": localStorage.getItem(\"token\")\n              }\n            }).then(function (res) {\n              var status = res.status,\n                  data = res.data;\n              console.log(\"status : \".concat(status));\n              return data;\n            })[\"catch\"](function (err) {\n              return console.log(err);\n            });\n\n          case 2:\n            videos = _context.sent;\n            return _context.abrupt(\"return\", {\n              videos: videos\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProps.apply(this, arguments);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"HotVideoGridListByViewCnt\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx"],"names":["React","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","Avatar","axios","useRouter","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","HotVideoGridListByViewCnt","videos","router","classes","map","v","id","videoUrl","viewCount","userImg","name","getStaticProps","get","headers","localStorage","getItem","then","res","status","data","console","log","err"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Avatar, ListSubheader} from \"@material-ui/core\";\nimport {NextPageContext} from \"next\";\nimport axios from \"axios\";\nimport {VideoResponseDto} from \"../../api/video/VideoResponseDto\";\nimport {useRouter} from \"next/router\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\n\n\nexport default function HotVideoGridListByViewCnt({videos = []}) {\n    const router = useRouter();\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4.5}>\n                {videos.map((v) => (\n                    <GridListTile key={v.id}>\n                        <video muted autoPlay={true} width=\"100%\" src={v.videoUrl}  />\n                        <GridListTileBar\n                            title={v.title}\n                            subtitle={v.viewCount}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${v.title}`}>\n                                    <Avatar src={v.userImg} alt={v.name}  className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nexport async function getStaticProps() {\n    const videos: Promise<VideoResponseDto[]> = await axios.get(\"http://127.0.0.1/api/video/order/topView\",\n        {\n            headers: {\n                \"Authorization\": localStorage.getItem(\"token\"),\n            }\n        }\n    ).then(res => {\n        const {status, data} = res;\n        console.log(`status : ${status}`)\n        return data;\n    }).catch(err => console.log(err));\n\n    return { videos: videos };\n\n    return {\n        props: {\n            videos,\n        },\n    }\n}"]},"metadata":{},"sourceType":"module"}