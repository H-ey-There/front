{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/upload/post.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: '300px',\n    maxWidth: '1000px',\n    rows: 19\n  },\n  preview: {\n    minWidth: '300px',\n    maxWidth: '1000px'\n  },\n  button: {\n    margin: '10px',\n    padding: '10px'\n  }\n}));\nexport default function UploadVideo() {\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: content,\n    1: setContent\n  } = useState(\"\");\n  const {\n    0: picture,\n    1: setPicture\n  } = useState({\n    preview: \"\",\n    raw: null\n  });\n  const classes = useStyles();\n\n  async function onSubmitHandler() {\n    const form = new FormData();\n    form.append(\"requestUserId\", \"1\");\n    form.append(\"title\", title);\n    form.append(\"content\", content);\n    form.append(\"img\", picture.raw);\n    await axios.post(\"http://localhost:8081/v1/registration/post\", form).then(response => {\n      const {\n        status,\n        data\n      } = response;\n      if (status === 201 || status == 200) console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    label: \"Title\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"title...\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(TextField, {\n    className: classes.textField,\n    label: \"Content\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Posting...\",\n    fullWidth: true,\n    multiline: true,\n    rows: 10,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: e => setContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-thumbnail\",\n    name: \"upload-photo\",\n    type: \"file\",\n    onChange: e => setPicture({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, \"Upload Thumbnail\")), picture.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"secondary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: () => setPicture({\n      preview: \"\",\n      raw: null\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Remove\"), __jsx(\"img\", {\n    className: classes.preview,\n    src: picture.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Upload\")));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/upload/post.tsx"],"names":["React","useState","createStyles","makeStyles","TextField","axios","Button","useStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","minWidth","maxWidth","rows","preview","button","margin","padding","UploadVideo","title","setTitle","content","setContent","picture","setPicture","raw","classes","onSubmitHandler","form","FormData","append","post","then","response","status","data","console","log","catch","error","shrink","e","target","value","URL","createObjectURL","files"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport {Button} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            minWidth: '300px',\n            maxWidth: '1000px',\n            rows: 19\n        },\n        preview: {\n            minWidth: '300px',\n            maxWidth: '1000px'\n        },\n        button: {\n            margin: '10px',\n            padding: '10px'\n        }\n    }),\n);\n\n\ninterface Metadata {\n    preview: string;\n    raw?: File;\n}\n\nexport default function UploadVideo() {\n    const [title, setTitle] = useState<string>(\"\");\n    const [content, setContent] = useState<string>(\"\");\n    const [picture, setPicture] = useState<Metadata>({\n        preview: \"\",\n        raw: null\n    });\n\n    const classes = useStyles();\n\n    async function onSubmitHandler() {\n        const form = new FormData();\n        form.append(\"requestUserId\", \"1\");\n        form.append(\"title\", title);\n        form.append(\"content\", content);\n        form.append(\"img\", picture.raw);\n\n        await axios.post(\"http://localhost:8081/v1/registration/post\", form)\n            .then(response => {\n                const {status, data} = response;\n                if (status === 201 || status == 200)\n                    console.log(data);\n            })\n            .catch(error => {\n                console.error(error);\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <TextField\n                    className={classes.textField}\n                    label=\"Title\"\n                    style={{margin: 8}}\n                    placeholder=\"title...\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    onChange={e => setTitle(e.target.value)}\n                />\n\n                <TextField\n                    className={classes.textField}\n                    label=\"Content\"\n                    style={{margin: 8}}\n                    placeholder=\"Posting...\"\n                    fullWidth\n                    multiline\n                    rows={10}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    onChange={e => setContent(e.target.value)}\n                />\n\n                <label htmlFor=\"upload-picture\">\n                    <input\n                        style={{display: 'none'}}\n                        id=\"upload-thumbnail\"\n                        name=\"upload-photo\"\n                        type=\"file\"\n                        onChange={e => setPicture({\n                            preview: URL.createObjectURL(e.target.files[0]),\n                            raw: e.target.files[0]\n                        })}\n                    />\n\n                    <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\">\n                        Upload Thumbnail\n                    </Button>\n                </label>\n\n                {picture.raw !== null &&\n                (\n                    <>\n                        <br/>\n                        <Button className={classes.button} color=\"secondary\" variant=\"contained\" component=\"span\"\n                                onClick={() => setPicture({preview: \"\", raw: null})}>\n                            Remove\n                        </Button>\n                        <img className={classes.preview} src={picture.preview} />\n                        <br/>\n                    </>\n                )\n\n                }\n                <br/>\n\n\n                <br/>\n                <br/>\n                <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\"\n                        onClick={onSubmitHandler}>\n                    Upload\n                </Button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}