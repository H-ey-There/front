{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/modal/video-upload-modal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { TextField } from \"@material-ui/core\";\nexport default function VideoUploadModal() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState({}),\n      thumbnail = _useState3[0],\n      setThumbnail = _useState3[1];\n\n  var _useState4 = useState({}),\n      video = _useState4[0],\n      setVideo = _useState4[1];\n\n  function onSubmitHandler() {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var form;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              form = new FormData();\n              form.append(\"title\", title);\n              form.append(\"description\", description);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/video-plus.svg\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Video Upload\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    label: \"video title\",\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }), __jsx(TextField, {\n    label: \"video description\",\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  })))), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Disagree\"), __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Agree\"))));\n}\n\n_s(VideoUploadModal, \"ViRGokCKYWRxRE8zHlb0Svol/Z0=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = VideoUploadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoUploadModal\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/modal/video-upload-modal.tsx"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","TextField","VideoUploadModal","open","setOpen","theme","fullScreen","breakpoints","down","title","setTitle","description","setDescription","thumbnail","setThumbnail","video","setVideo","onSubmitHandler","form","FormData","append","handleClickOpen","handleClose","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AAGA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AAAA,wBACfX,KAAK,CAACC,QAAN,CAAe,KAAf,CADe;AAAA;AAAA,MAChCW,IADgC;AAAA,MAC1BC,OAD0B;;AAEvC,MAAMC,KAAK,GAAGL,QAAQ,EAAtB;AACA,MAAMM,UAAU,GAAGP,aAAa,CAACM,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;;AAHuC,kBAKbhB,QAAQ,CAAC,EAAD,CALK;AAAA,MAKhCiB,KALgC;AAAA,MAKzBC,QALyB;;AAAA,mBAMDlB,QAAQ,CAAC,EAAD,CANP;AAAA,MAMhCmB,WANgC;AAAA,MAMnBC,cANmB;;AAAA,mBAOLpB,QAAQ,CAAC,EAAD,CAPH;AAAA,MAOhCqB,SAPgC;AAAA,MAOrBC,YAPqB;;AAAA,mBAQbtB,QAAQ,CAAC,EAAD,CARK;AAAA,MAQhCuB,KARgC;AAAA,MAQzBC,QARyB;;AAAA,WAUxBC,eAVwB;AAAA;AAAA;;AAAA;AAAA,gFAUvC;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,cAAAA,IADV,GACiB,IAAIC,QAAJ,EADjB;AAEID,cAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBX,KAArB;AACAS,cAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BT,WAA3B;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVuC;AAAA;AAAA;;AAgBvC,MAAMU,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1BjB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AAIA,MAAMkB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBlB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,uBAAT;AAAiC,IAAA,OAAO,EAAEiB,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,MAAC,MAAD;AACI,IAAA,UAAU,EAAEf,UADhB;AAEI,IAAA,IAAI,EAAEH,IAFV;AAGI,IAAA,OAAO,EAAEmB,WAHb;AAII,uBAAgB,yBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2C,cAA3C,CANJ,EAOI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,MAAM,EAAC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAgC,IAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,aAAIb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,MAAC,SAAD;AAAY,IAAA,KAAK,EAAC,mBAAlB;AAAsC,IAAA,QAAQ,EAAE,kBAAAF,CAAC;AAAA,aAAIX,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,CADJ,CAPJ,EAuBI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEH,WAA3B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEA,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CAvBJ,CAHJ,CADJ;AAuCH;;GA/DuBpB,gB;UAENF,Q,EACKD,a;;;KAHCG,gB","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useTheme} from '@material-ui/core/styles';\nimport {TextField} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport default function VideoUploadModal() {\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [thumbnail, setThumbnail] = useState({});\n    const [video, setVideo] = useState({});\n\n    async function onSubmitHandler () {\n        const form = new FormData();\n        form.append(\"title\", title);\n        form.append(\"description\", description);\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <img src=\"/icons/video-plus.svg\" onClick={handleClickOpen}/>\n\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <DialogTitle id=\"responsive-dialog-title\">{\"Video Upload\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <form action=\"\">\n                            <TextField  label=\"video title\" onChange={e => setTitle(e.target.value)}/>\n                            <br/>\n                            <br/>\n                            <TextField  label=\"video description\" onChange={e => setDescription(e.target.value)} />\n                            <br/>\n                            <input type=\"file\"/>\n                            <input type=\"file\"/>\n                            \n                            <br/>\n\n                        </form>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}