{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport cookieCutter from 'cookie-cutter';\nexport default function Video({\n  data\n}) {\n  const {\n    0: video,\n    1: setVideo\n  } = useState(data);\n  const router = useRouter();\n  useEffect(() => {\n    if (!sessionStorage.getItem(\"token\")) {\n      window.alert(\"로그인페이지로 이동합니다\");\n      window.location.href = \"/login\";\n    }\n\n    async function loadData() {\n      console.log('hihi : ', router.query.id);\n\n      if (router.query.id !== undefined) {\n        console.log(`http://localhost:8082/video/${router.query.id}`);\n        const response = await fetch(`http://localhost:8082/video/${router.query.id}?requestUserId=${cookieCutter.get(\"id\")}`);\n        const data = await response.json();\n        console.log('data: ', data);\n        await setVideo(data);\n        console.log('video : ', video);\n      }\n    }\n\n    console.log('data : ', data);\n\n    if (!data) {\n      loadData();\n    }\n  }, [router.query.id]);\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(VideoSingleContainer, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n}\n\nVideo.getInitialProps = async ctx => {\n  const id = Number(cookieCutter.get(\"id\"));\n  console.log('id: ', id);\n  const {\n    data\n  } = await axios.get(`http://localhost:8082/video/${ctx.query.id}?requestUserId=${id}`);\n  return {\n    data\n  };\n};","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx"],"names":["Navbar","VideoSingleContainer","useRouter","useEffect","useState","axios","cookieCutter","Video","data","video","setVideo","router","sessionStorage","getItem","window","alert","location","href","loadData","console","log","query","id","undefined","response","fetch","get","json","getInitialProps","ctx","Number"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,eAAzB;AA4CA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AAClC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAQI,IAAR,CAAlC;AACA,QAAMG,MAAM,GAAGT,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAL,EAAsC;AAClCC,MAAAA,MAAM,CAACC,KAAP,CAAa,eAAb;AACAD,MAAAA,MAAM,CAACE,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;;AAED,mBAAeC,QAAf,GAA0B;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,MAAM,CAACU,KAAP,CAAaC,EAApC;;AACA,UAAIX,MAAM,CAACU,KAAP,CAAaC,EAAb,KAAoBC,SAAxB,EAAmC;AAC/BJ,QAAAA,OAAO,CAACC,GAAR,CAAa,+BAA8BT,MAAM,CAACU,KAAP,CAAaC,EAAG,EAA3D;AACA,cAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8Bd,MAAM,CAACU,KAAP,CAAaC,EAAG,kBAAiBhB,YAAY,CAACoB,GAAb,CAAiB,IAAjB,CAAuB,EAAxF,CAA5B;AACA,cAAMlB,IAAU,GAAG,MAAMgB,QAAQ,CAACG,IAAT,EAAzB;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,IAAtB;AACA,cAAME,QAAQ,CAACF,IAAD,CAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBX,KAAvB;AACH;AACJ;;AAEDU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBZ,IAAtB;;AACA,QAAI,CAACA,IAAL,EAAW;AACPU,MAAAA,QAAQ;AACX;AACJ,GAtBQ,EAsBN,CAACP,MAAM,CAACU,KAAP,CAAaC,EAAd,CAtBM,CAAT;AAyBA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,oBAAD;AAAsB,IAAA,IAAI,EAAEd,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAEDD,KAAK,CAACqB,eAAN,GAAwB,MAAOC,GAAP,IAA+B;AACnD,QAAMP,EAAE,GAAGQ,MAAM,CAACxB,YAAY,CAACoB,GAAb,CAAiB,IAAjB,CAAD,CAAjB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBE,EAAnB;AACA,QAAM;AAAEd,IAAAA;AAAF,MAAW,MAAMH,KAAK,CAACqB,GAAN,CAAW,+BAA8BG,GAAG,CAACR,KAAJ,CAAUC,EAAG,kBAAiBA,EAAG,EAA1E,CAAvB;AAEA,SAAO;AAAEd,IAAAA;AAAF,GAAP;AACH,CAND","sourcesContent":["import Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport {useRouter} from \"next/router\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {NextPageContext} from \"next\";\nimport cookieCutter from 'cookie-cutter'\n\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface Video {\n    id: number;\n    title: string;\n    description: string;\n    createdAt: string;\n    modifiedAt: string;\n    thumbnailUrl: string;\n    videoUrl: string;\n    viewCount: number\n    goodStatus: boolean,\n    badStatus: boolean;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    comments: Comment[];\n}\n\nexport default function Video({data}) {\n    const [video, setVideo] = useState<Video>(data);\n    const router = useRouter()\n\n    useEffect(() => {\n        if (!sessionStorage.getItem(\"token\")) {\n            window.alert(\"로그인페이지로 이동합니다\");\n            window.location.href = \"/login\";\n        }\n\n        async function loadData() {\n            console.log('hihi : ', router.query.id)\n            if (router.query.id !== undefined) {\n                console.log(`http://localhost:8082/video/${router.query.id}`)\n                const response = await fetch(`http://localhost:8082/video/${router.query.id}?requestUserId=${cookieCutter.get(\"id\")}`);\n                const data:Video = await response.json();\n                console.log('data: ', data);\n                await setVideo(data);\n                console.log('video : ',video)\n            }\n        }\n\n        console.log('data : ',data);\n        if (!data) {\n            loadData();\n        }\n    }, [router.query.id]);\n\n\n    return (\n        <>\n            <Navbar/>\n            <VideoSingleContainer data={data}/>\n        </>\n    )\n}\n\nVideo.getInitialProps = async (ctx:NextPageContext) => {\n    const id = Number(cookieCutter.get(\"id\"));\n    console.log('id: ',id);\n    const { data } = await axios.get(`http://localhost:8082/video/${ctx.query.id}?requestUserId=${id}`);\n\n    return { data };\n}"]},"metadata":{},"sourceType":"module"}