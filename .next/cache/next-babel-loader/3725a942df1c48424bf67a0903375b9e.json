{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.contrastText\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\nexport default function HotVideoGridListByGoodCnt({\n  initVideos = []\n}) {\n  const classes = useStyles();\n  const {\n    0: videos,\n    1: setVideos\n  } = useState(initVideos);\n  useEffect(() => {\n    console.log('token: ', localStorage.getItem(\"token\"));\n    const response = axios.get(\"http://localhost:8080/api/video/vvv\", {\n      headers: {\n        Authorization: localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      console.log(response);\n      setVideos(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, initVideos.map(v => __jsx(GridListTile, {\n    key: v.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v.thumbnailUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), __jsx(GridListTileBar, {\n    title: v.title,\n    subtitle: v.description,\n    classes: {\n      root: classes.titleBar,\n      title: classes.title\n    },\n    actionIcon: __jsx(IconButton, {\n      \"aria-label\": `star ${v.title}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, __jsx(StarBorderIcon, {\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  })))));\n}\n\nHotVideoGridListByGoodCnt.getInitialProps = async ctx => {\n  const videos = axios.get(\"/order/topView\", {\n    headers: {\n      \"Authorization\": localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    const {\n      status,\n      data\n    } = res;\n    console.log(`status : ${status}`);\n    return data;\n  }).catch(err => console.log(err));\n  return videos;\n};","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByGoodCnt.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","axios","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","HotVideoGridListByGoodCnt","initVideos","classes","videos","setVideos","console","log","localStorage","getItem","response","get","headers","Authorization","then","data","catch","err","map","v","id","thumbnailUrl","description","getInitialProps","ctx","res","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAeC,YAAf,EAA6BC,UAA7B,QAA8C,0BAA9C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,IACzBT,YAAY,CAAC;AACTU,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFC,IAAAA,cAAc,EAAE,cAHd;AAIFC,IAAAA,QAAQ,EAAE,QAJR;AAKFC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,UAAd,CAAyBC;AALxC,GADG;AAQTC,EAAAA,QAAQ,EAAE;AACNP,IAAAA,QAAQ,EAAE,QADJ;AAEN;AACAQ,IAAAA,SAAS,EAAE;AAHL,GARD;AAaTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAEb,KAAK,CAACO,OAAN,CAAcO,OAAd,CAAsBC;AAD1B,GAbE;AAgBTC,EAAAA,QAAQ,EAAE;AACNR,IAAAA,UAAU,EACN;AAFE;AAhBD,CAAD,CADY,CAA5B;AAyBA,eAAe,SAASS,yBAAT,CAAmC;AAACC,EAAAA,UAAU,GAAG;AAAd,CAAnC,EAAsD;AACjE,QAAMC,OAAO,GAAGpB,SAAS,EAAzB;AAEA,QAAM;AAAA,OAACqB,MAAD;AAAA,OAASC;AAAT,MAAsBhC,QAAQ,CAAC6B,UAAD,CAApC;AAGA5B,EAAAA,SAAS,CAAC,MAAM;AACZgC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;AAEA,UAAMC,QAAQ,GAAG5B,KAAK,CAAC6B,GAAN,CAAU,qCAAV,EACb;AACIC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAEL,YAAY,CAACC,OAAb,CAAqB,OAArB;AADV;AADb,KADa,EAMfK,IANe,CAMVJ,QAAQ,IAAI;AACfJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACAL,MAAAA,SAAS,CAACK,QAAQ,CAACK,IAAV,CAAT;AACH,KATgB,EASdC,KATc,CASRC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CATC,CAAjB;AAUH,GAbQ,EAaN,EAbM,CAAT;AAeA,SACI;AAAK,IAAA,SAAS,EAAEd,OAAO,CAAClB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,SAAS,EAAEkB,OAAO,CAACT,QAA7B;AAAuC,IAAA,IAAI,EAAE,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,UAAU,CAACgB,GAAX,CAAgBC,CAAD,IACZ,MAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,CAAC,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,CAAC,CAACE,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,eAAD;AACI,IAAA,KAAK,EAAEF,CAAC,CAACvB,KADb;AAEI,IAAA,QAAQ,EAAEuB,CAAC,CAACG,WAFhB;AAGI,IAAA,OAAO,EAAE;AACLrC,MAAAA,IAAI,EAAEkB,OAAO,CAACH,QADT;AAELJ,MAAAA,KAAK,EAAEO,OAAO,CAACP;AAFV,KAHb;AAOI,IAAA,UAAU,EACN,MAAC,UAAD;AAAY,oBAAa,QAAOuB,CAAC,CAACvB,KAAM,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,cAAD;AAAgB,MAAA,SAAS,EAAEO,OAAO,CAACP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,CADL,CADJ,CADJ;AAwBH;;AAEDK,yBAAyB,CAACsB,eAA1B,GAA4C,MAAOC,GAAP,IAAgC;AACxE,QAAMpB,MAAmC,GAAGtB,KAAK,CAAC6B,GAAN,CAAU,gBAAV,EACxC;AACIC,IAAAA,OAAO,EAAE;AACL,uBAAiBJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AADZ;AADb,GADwC,EAM1CK,IAN0C,CAMrCW,GAAG,IAAI;AACV,UAAM;AAACC,MAAAA,MAAD;AAASX,MAAAA;AAAT,QAAiBU,GAAvB;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAWmB,MAAO,EAA/B;AACA,WAAOX,IAAP;AACH,GAV2C,EAUzCC,KAVyC,CAUnCC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAV4B,CAA5C;AAYA,SAAOb,MAAP;AACH,CAdD","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Theme, createStyles, makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport axios from \"axios\";\nimport {NextPageContext} from \"next\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\nexport default function HotVideoGridListByGoodCnt({initVideos = []}) {\n    const classes = useStyles();\n\n    const [videos, setVideos] = useState(initVideos);\n\n\n    useEffect(() => {\n        console.log('token: ', localStorage.getItem(\"token\"))\n\n        const response = axios.get(\"http://localhost:8080/api/video/vvv\",\n            {\n                headers: {\n                    Authorization: localStorage.getItem(\"token\"),\n                }\n            }\n        ).then(response => {\n            console.log(response)\n            setVideos(response.data)\n        }).catch(err => console.log(err));\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4.5}>\n                {initVideos.map((v) => (\n                    <GridListTile key={v.id}>\n                        <img src={v.thumbnailUrl}/>\n                        <GridListTileBar\n                            title={v.title}\n                            subtitle={v.description}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${v.title}`}>\n                                    <StarBorderIcon className={classes.title}/>\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\nHotVideoGridListByGoodCnt.getInitialProps = async (ctx: NextPageContext) => {\n    const videos: Promise<VideoResponseDto[]> = axios.get(\"/order/topView\",\n        {\n            headers: {\n                \"Authorization\": localStorage.getItem(\"token\"),\n            }\n        }\n    ).then(res => {\n        const {status, data} = res;\n        console.log(`status : ${status}`)\n        return data;\n    }).catch(err => console.log(err));\n\n    return videos;\n}"]},"metadata":{},"sourceType":"module"}