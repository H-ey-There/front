{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-single-container.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VideoSingleSidebarContainer from \"./video-single-sidebar-container\";\nimport VideoMetadataContainer from \"./video-metadata-container\";\nimport VideoCommentContainer from \"./video-comment\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  }\n}));\nexport default function VideoSingleContainer({\n  data\n}) {\n  const classes = useStyles();\n  const {\n    0: video,\n    1: setVideo\n  } = useState(data);\n  const router = useRouter();\n  useEffect(() => {\n    async function loadData() {\n      console.log('hihi : ', router.query.id);\n\n      if (router.query.id !== undefined) {\n        console.log(`http://localhost:8082/video/${router.query.id}`);\n        const {\n          data\n        } = await axios(`http://localhost:8082/video/${router.query.id}`);\n        console.log('data: ', data);\n        await setVideo(data);\n        console.log('video : ', video);\n      }\n    }\n\n    console.log('data : ', data);\n\n    if (!data) {\n      loadData();\n      console.log(video);\n    }\n\n    console.log(video);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    style: {\n      objectFit: 'contain'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, __jsx(\"video\", {\n    width: `100%`,\n    controls: true,\n    src: `http://www.aaa.com`,\n    poster: `http://www.aaa.com`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Your browser does not support the video tag.\")), __jsx(VideoMetadataContainer, {\n    id: video.id,\n    title: video.title,\n    description: video.description,\n    createdAt: video.createdAt,\n    viewCount: video.viewCount,\n    goodStatus: video.goodStatus,\n    badStatus: video.badStatus,\n    userId: video.userId,\n    name: video.name,\n    userImg: video.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    style: {\n      margin: '15px',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(VideoCommentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }))), __jsx(VideoSingleSidebarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, `\n            \n  .video-description {\n    display: inline-block; \n    width: 100%; \n    white-space: nowrap; \n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  .video-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .thumbnail {\n    position: relative;\n    display: flex;\n  }\n  \n  .thumbnail::before {\n    content: attr(data-duration);\n    position: absolute;\n    background-color: rgba(0, 0, 0, .85);\n    color: white;\n    right: 5px;\n    bottom: 5px;\n    padding: .1em .3em;\n    border-radius: .3em;\n    font-size: .9rem;\n  }\n  \n  .thumbnail-image {\n    width: 100%;\n    height: 100%;\n    min-width: 250px;\n    min-height: 150px;\n    background-color: #AAA;\n  }\n  \n  .video-bottom-section {\n    display: flex;\n    align-items: flex-start;\n    margin-top: 1rem;\n  }\n  \n  .channel-icon {\n    margin-right: .75rem;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    background-color: #AAA;\n  }\n  \n  .video-details {\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n  }\n  \n  .video-title {\n    font-size: 1.1rem;\n    font-weight: bold;\n    margin-bottom: .5rem;\n    text-decoration: none;\n    color: black;\n  }\n  \n  .video-channel-name {\n    margin-bottom: .1rem;\n    text-decoration: none;\n    transition: color 150ms;\n  }\n  \n  .video-channel-name:hover {\n    color: #111;\n  }\n  \n  .video-channel-name,\n  .video-metadata {\n    color: #555;\n  }\n  `));\n}\n\nVideoSingleContainer.getInitialProps = async ctx => {\n  const response = await fetch(`http://localhost:8082/video/{ctx.query.id}`);\n  const data = await response.json(); // const { data } = await axios.get(`http://localhost:8082/video/$3`);\n  // console.log('data:',data);\n\n  return {\n    data\n  };\n};","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-single-container.tsx"],"names":["React","useState","useEffect","makeStyles","createStyles","Grid","VideoSingleSidebarContainer","VideoMetadataContainer","VideoCommentContainer","axios","useRouter","useStyles","theme","root","flexGrow","VideoSingleContainer","data","classes","video","setVideo","router","loadData","console","log","query","id","undefined","objectFit","title","description","createdAt","viewCount","goodStatus","badStatus","userId","name","userImg","margin","padding","getInitialProps","ctx","response","fetch","json"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {makeStyles, createStyles, Theme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport VideoSingleSidebarContainer from \"./video-single-sidebar-container\";\nimport VideoMetadataContainer from \"./video-metadata-container\";\nimport VideoCommentContainer from \"./video-comment\";\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\nimport {NextPageContext} from \"next\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n    }),\n);\n\n\ninterface LargeComment {\n  id: number;\n  comment: string;\n  createdAt: string;\n  modifiedAt: string;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n}\n\ninterface Comment {\n  id: number;\n  comment: string;\n  createdAt: string;\n  modifiedAt: string;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n  largeComments: LargeComment[];\n}\ninterface Video {\n  id: number;\n  title: string;\n  description: string;\n  createdAt: string;\n  modifiedAt: string;\n  thumbnailUrl: string;\n  videoUrl: string;\n  viewCount: number;\n  goodStatus: boolean;\n  badStatus: boolean;\n  userId: number;\n  email:string;\n  name: string;\n  userImg: string;\n  comments : Comment[];\n}\n\nexport default function VideoSingleContainer({data}) {\n    const classes = useStyles();\n    const [video, setVideo] = useState<Video>(data);\n    const router = useRouter()\n    \n    useEffect(() => {\n        async function loadData() {\n            console.log('hihi : ', router.query.id)\n            if (router.query.id !== undefined) {\n                console.log(`http://localhost:8082/video/${router.query.id}`)\n                const { data } = await axios(`http://localhost:8082/video/${router.query.id}`);\n                console.log('data: ', data);\n                await setVideo(data);\n                console.log('video : ',video)\n            }\n        }\n\n        console.log('data : ',data);\n        if (!data) {\n            loadData();\n            console.log(video);\n        }\n\n        console.log(video)\n\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={9}>\n                    <div style={{\n                        objectFit: 'contain'\n                    }}>\n                        <video width={`100%`} controls src={`http://www.aaa.com`} poster={`http://www.aaa.com`}>\n                            Your browser does not support the video tag.\n                        </video>\n                    </div>\n\n                    <VideoMetadataContainer\n                        id={video.id}\n                        title={video.title}\n                        description={video.description}\n                        createdAt={video.createdAt}\n                        viewCount={video.viewCount}\n                        goodStatus={video.goodStatus}\n                        badStatus={video.badStatus}\n                        userId={video.userId}\n                        name={video.name}\n                        userImg={video.userImg}\n                    />\n\n                    <hr/>\n                    <div style={{margin: '15px', padding: '10px'}}>\n                        <VideoCommentContainer />\n                    </div>\n\n\n                </Grid>\n                <VideoSingleSidebarContainer />\n            </Grid>\n\n            <style>{`\n            \n  .video-description {\n    display: inline-block; \n    width: 100%; \n    white-space: nowrap; \n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  .video-container {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .thumbnail {\n    position: relative;\n    display: flex;\n  }\n  \n  .thumbnail::before {\n    content: attr(data-duration);\n    position: absolute;\n    background-color: rgba(0, 0, 0, .85);\n    color: white;\n    right: 5px;\n    bottom: 5px;\n    padding: .1em .3em;\n    border-radius: .3em;\n    font-size: .9rem;\n  }\n  \n  .thumbnail-image {\n    width: 100%;\n    height: 100%;\n    min-width: 250px;\n    min-height: 150px;\n    background-color: #AAA;\n  }\n  \n  .video-bottom-section {\n    display: flex;\n    align-items: flex-start;\n    margin-top: 1rem;\n  }\n  \n  .channel-icon {\n    margin-right: .75rem;\n    border-radius: 50%;\n    width: 36px;\n    height: 36px;\n    background-color: #AAA;\n  }\n  \n  .video-details {\n    display: flex;\n    flex-direction: column;\n    margin-left: 20px;\n  }\n  \n  .video-title {\n    font-size: 1.1rem;\n    font-weight: bold;\n    margin-bottom: .5rem;\n    text-decoration: none;\n    color: black;\n  }\n  \n  .video-channel-name {\n    margin-bottom: .1rem;\n    text-decoration: none;\n    transition: color 150ms;\n  }\n  \n  .video-channel-name:hover {\n    color: #111;\n  }\n  \n  .video-channel-name,\n  .video-metadata {\n    color: #555;\n  }\n  `}</style>\n        </div>\n    )\n}\n\nVideoSingleContainer.getInitialProps = async (ctx:NextPageContext) => {\n    const response = await fetch(`http://localhost:8082/video/{ctx.query.id}`);\n    const data : Video = await response.json();\n\n    // const { data } = await axios.get(`http://localhost:8082/video/$3`);\n    // console.log('data:',data);\n    return { data };\n}"]},"metadata":{},"sourceType":"module"}