{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport { useRouter } from \"next/router\";\nimport { useLayoutEffect } from \"react\";\nimport axios from \"axios\";\nexport default function Video() {\n  _s();\n\n  var router = useRouter();\n  useLayoutEffect(function () {\n    function loadVideo() {\n      return _loadVideo.apply(this, arguments);\n    }\n\n    function _loadVideo() {\n      _loadVideo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, status, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:8082/video/\".concat(router.query.id));\n\n              case 2:\n                response = _context.sent;\n                status = response.status, data = response.data;\n\n                if (status === 200) {\n                  console.log(data);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadVideo.apply(this, arguments);\n    }\n\n    loadVideo();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(VideoSingleContainer, {\n    id: router.query.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Video, \"PMNAFCTlzflsfyz0t0UoMn9IO2w=\", false, function () {\n  return [useRouter];\n});\n\n_c = Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx"],"names":["Navbar","VideoSingleContainer","useRouter","useLayoutEffect","axios","Video","router","loadVideo","get","query","id","response","status","data","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAmBC,eAAnB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC5B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEAC,EAAAA,eAAe,CAAC,YAAM;AAAA,aACHI,SADG;AAAA;AAAA;;AAAA;AAAA,4EAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE2BH,KAAK,CAACI,GAAN,uCAAyCF,MAAM,CAACG,KAAP,CAAaC,EAAtD,EAF3B;;AAAA;AAEUC,gBAAAA,QAFV;AAGYC,gBAAAA,MAHZ,GAG8BD,QAH9B,CAGYC,MAHZ,EAGqBC,IAHrB,GAG8BF,QAH9B,CAGqBE,IAHrB;;AAII,oBAAID,MAAM,KAAK,GAAf,EAAoB;AAChBE,kBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH;;AANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADkB;AAAA;AAAA;;AASlBN,IAAAA,SAAS;AACZ,GAVc,EAUZ,EAVY,CAAf;AAYA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,oBAAD;AAAsB,IAAA,EAAE,EAAED,MAAM,CAACG,KAAP,CAAaC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;GArBuBL,K;UACLH,S;;;KADKG,K","sourcesContent":["import Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport {useRouter} from \"next/router\";\nimport {useEffect, useLayoutEffect} from \"react\";\nimport axios from \"axios\";\n\nexport default function Video() {\n    const router = useRouter();\n\n    useLayoutEffect(() => {\n        async function loadVideo() {\n\n            const response = await axios.get(`http://localhost:8082/video/${router.query.id}`);\n            const { status , data } = response;\n            if (status === 200) {\n                console.log(data);\n            }\n        }\n        loadVideo();\n    }, [])\n\n    return (\n        <>\n            <Navbar/>\n            <VideoSingleContainer id={router.query.id} />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}