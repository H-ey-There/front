{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/modal/video-upload-modal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createStyles, makeStyles, useTheme } from '@material-ui/core/styles';\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      minWidth: '300px',\n      maxWidth: '1000px',\n      rows: 19\n    },\n    preview: {\n      minWidth: '300px',\n      maxWidth: '500px'\n    },\n    button: {\n      margin: '10px',\n      padding: '10px'\n    }\n  });\n});\nexport default function VideoUploadModal() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  var classes = useStyles();\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState({\n    preview: \"\",\n    raw: null\n  }),\n      thumbnail = _useState3[0],\n      setThumbnail = _useState3[1];\n\n  var _useState4 = useState({\n    preview: \"\",\n    raw: null\n  }),\n      video = _useState4[0],\n      setVideo = _useState4[1];\n\n  function onSubmitHandler() {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var form;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              form = new FormData();\n              form.append(\"requestUserId\", \"1\");\n              form.append(\"title\", title);\n              form.append(\"description\", description);\n              form.append(\"thumbnail\", thumbnail.raw);\n              form.append(\"video\", video.raw);\n              _context.next = 8;\n              return axios.post(\"http://localhost:8082/registration\", form).then(function (response) {\n                var status = response.status,\n                    data = response.data;\n                if (status === 201 || status == 200) console.log(data);\n              })[\"catch\"](function (error) {\n                console.error(error);\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/video-plus.svg\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Video Upload\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    label: \"Title\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"title...\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }), __jsx(TextField, {\n    className: classes.textField,\n    label: \"Video Description\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"video description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 10,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-thumbnail\",\n    name: \"upload-photo\",\n    type: \"file\",\n    onChange: function onChange(e) {\n      return setThumbnail({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 37\n    }\n  }, \"Upload Thumbnail\")), thumbnail.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"secondary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: function onClick() {\n      return setThumbnail({\n        preview: \"\",\n        raw: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  }, \"Remove\"), __jsx(\"img\", {\n    className: classes.preview,\n    src: thumbnail.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 41\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 33\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-video\",\n    name: \"upload-video\",\n    type: \"file\",\n    onChange: function onChange(e) {\n      return setVideo({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: function onClick(e) {\n      return setVideo({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, \"Upload Video\")), video.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 41\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"secondary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, \"Remove\"), __jsx(\"video\", {\n    className: classes.preview,\n    autoPlay: true,\n    controls: true,\n    src: video.preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 41\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 41\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"Close\"), __jsx(Button, {\n    onClick: onSubmitHandler,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, \"Submit!\"))));\n}\n\n_s(VideoUploadModal, \"TWs6w4cZmBxOaCy/HwmTisXkP5g=\", false, function () {\n  return [useTheme, useMediaQuery, useStyles];\n});\n\n_c = VideoUploadModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoUploadModal\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/modal/video-upload-modal.tsx"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","createStyles","makeStyles","useTheme","TextField","axios","useStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","minWidth","maxWidth","rows","preview","button","margin","padding","VideoUploadModal","open","setOpen","fullScreen","breakpoints","down","classes","title","setTitle","description","setDescription","raw","thumbnail","setThumbnail","video","setVideo","onSubmitHandler","form","FormData","append","post","then","response","status","data","console","log","error","handleClickOpen","handleClose","overflow","shrink","e","target","value","URL","createObjectURL","files"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\nimport {TextField} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            minWidth: '300px',\n            maxWidth: '1000px',\n            rows: 19\n        },\n        preview: {\n            minWidth: '300px',\n            maxWidth: '500px'\n        },\n        button: {\n            margin: '10px',\n            padding: '10px'\n        }\n    }),\n);\n\ninterface Metadata {\n    preview: string;\n    raw?: File;\n}\n\nexport default function VideoUploadModal() {\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const classes = useStyles();\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [description, setDescription] = useState<string>(\"\");\n    const [thumbnail, setThumbnail] = useState<Metadata>({\n        preview: \"\",\n        raw: null,\n    });\n    const [video, setVideo] = useState<Metadata>({\n        preview: \"\",\n        raw: null,\n    });\n\n    async function onSubmitHandler() {\n        const form = new FormData();\n        form.append(\"requestUserId\", \"1\");\n        form.append(\"title\", title);\n        form.append(\"description\", description);\n        form.append(\"thumbnail\", thumbnail.raw);\n        form.append(\"video\", video.raw);\n\n        await axios.post(\"http://localhost:8082/registration\", form)\n            .then(response => {\n                const {status, data} = response;\n                if (status === 201 || status == 200)\n                    console.log(data);\n            })\n            .catch(error => {\n                console.error(error);\n            })\n    }\n\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <img src=\"/icons/video-plus.svg\" onClick={handleClickOpen}/>\n\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n                style={{\n                    overflow: 'scroll'\n                }}\n            >\n                <DialogTitle id=\"responsive-dialog-title\">{\"Video Upload\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <div className={classes.root}>\n                            <div>\n                                <TextField\n                                    className={classes.textField}\n                                    label=\"Title\"\n                                    style={{margin: 8}}\n                                    placeholder=\"title...\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    onChange={e => setTitle(e.target.value)}\n                                />\n\n                                <TextField\n                                    className={classes.textField}\n                                    label=\"Video Description\"\n                                    style={{margin: 8}}\n                                    placeholder=\"video description\"\n                                    fullWidth\n                                    multiline\n                                    rows={10}\n                                    margin=\"normal\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    onChange={e => setDescription(e.target.value)}\n                                />\n\n                                <label htmlFor=\"upload-thumbnail\">\n                                    <input\n                                        style={{display: 'none'}}\n                                        id=\"upload-thumbnail\"\n                                        name=\"upload-photo\"\n                                        type=\"file\"\n                                        onChange={e => setThumbnail({\n                                            preview: URL.createObjectURL(e.target.files[0]),\n                                            raw: e.target.files[0]\n                                        })}\n                                    />\n\n                                    <Button className={classes.button} color=\"primary\" variant=\"contained\"\n                                            component=\"span\">\n                                        Upload Thumbnail\n                                    </Button>\n                                </label>\n\n                                {thumbnail.raw !== null &&\n                                (\n                                    <>\n                                        <br/>\n                                        <Button className={classes.button} color=\"secondary\" variant=\"contained\"\n                                                component=\"span\"\n                                                onClick={() => setThumbnail({preview: \"\", raw: null})}>\n                                            Remove\n                                        </Button>\n                                        <img className={classes.preview} src={thumbnail.preview}/>\n                                        <br/>\n                                    </>\n                                )\n\n                                }\n                                <br/>\n\n                                <label htmlFor=\"upload-video\">\n                                    <input\n                                        style={{display: 'none'}}\n                                        id=\"upload-video\"\n                                        name=\"upload-video\"\n                                        type=\"file\"\n                                        onChange={e => setVideo({\n                                            preview: URL.createObjectURL(e.target.files[0]),\n                                            raw: e.target.files[0],\n                                        })}\n                                    />\n                                    <br/>\n                                    <br/>\n\n                                    <Button className={classes.button} color=\"primary\" variant=\"contained\"\n                                            component=\"span\"\n                                            onClick={e => setVideo({\n                                                preview: URL.createObjectURL(e.target.files[0]),\n                                                raw: e.target.files[0],\n                                            })}>\n                                        Upload Video\n                                    </Button>\n                                </label>\n                                {video.raw !== null && (\n                                    <>\n                                        <br/>\n                                        <Button className={classes.button} color=\"secondary\" variant=\"contained\"\n                                                component=\"span\">\n                                            Remove\n                                        </Button>\n                                        <video className={classes.preview} autoPlay controls src={video.preview}/>\n                                        <br/>\n                                    </>\n                                )}\n                                <br/>\n                                <br/>\n                            </div>\n                        </div>\n                    </DialogContentText>\n                    <br/>\n\n                </DialogContent>\n\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                    <Button onClick={onSubmitHandler} color=\"primary\" autoFocus>\n                        Submit!\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}