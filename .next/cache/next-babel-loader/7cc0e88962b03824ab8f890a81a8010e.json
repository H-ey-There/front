{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-comment.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport VideoLargeCommentContainer from \"./video-large-comment\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: 'inline'\n    }\n  });\n});\nexport default function VideoCommentContainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var comments = _ref.comments;\n  var router = useRouter();\n  var classes = useStyles();\n\n  var _useState = useState(comments),\n      commentList = _useState[0],\n      setCommentList = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      comment = _useState2[0],\n      setComment = _useState2[1];\n\n  function submitHandler() {\n    return _submitHandler.apply(this, arguments);\n  }\n\n  function _submitHandler() {\n    _submitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var payload, _yield$axios$post, status, response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //const {data} = axios.post()\n              if (comment.length < 3) {\n                window.alert(\"입력이 너무 적습니다\");\n                setComment(\"\");\n              }\n\n              ;\n              payload = {\n                requestUserId: Number(localStorage.getItem(\"id\")),\n                videoId: Number(router.query.id),\n                comment: comment\n              };\n              _context.next = 5;\n              return axios.post(\"http://localhost:8082/registration/comment\", payload);\n\n            case 5:\n              _yield$axios$post = _context.sent;\n              status = _yield$axios$post.status;\n\n              if (!(status === 201)) {\n                _context.next = 12;\n                break;\n              }\n\n              _context.next = 10;\n              return axios.get(\"video/\".concat(Number(router.query.id), \"/comments\"));\n\n            case 10:\n              response = _context.sent;\n              setCommentList(response.data);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitHandler.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    onChange: function onChange(e) {\n      return setComment(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Comments\"), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, commentList.map(function (c, index) {\n    return __jsx(React.Fragment, null, __jsx(ListItem, {\n      key: c.id,\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }, __jsx(\"a\", {\n      href: \"/community/\".concat(c.userId),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, __jsx(Avatar, {\n      alt: c.name,\n      src: c.userImg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }))), __jsx(ListItemText, {\n      primary: c.name,\n      secondary: __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 41\n        }\n      }), c.comment),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    })), __jsx(VideoLargeCommentContainer, {\n      cId: c.id,\n      largeComments: c.largeComments,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }), __jsx(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 30\n      }\n    }));\n  })));\n}\n\n_s(VideoCommentContainer, \"RCbOmDvafxgQ/8eCnX8sfl68YWA=\", false, function () {\n  return [useRouter, useStyles];\n});\n\n_c = VideoCommentContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCommentContainer\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-comment.tsx"],"names":["React","useState","createStyles","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","VideoLargeCommentContainer","Button","TextField","axios","useRouter","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","VideoCommentContainer","comments","router","classes","commentList","setCommentList","comment","setComment","submitHandler","length","window","alert","payload","requestUserId","Number","localStorage","getItem","videoId","query","id","post","status","get","response","data","e","target","value","map","c","index","userId","name","userImg","largeComments"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport VideoLargeCommentContainer from \"./video-large-comment\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {useRouter} from \"next/router\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface CommentList {\n    comments: Comment[];\n}\n\ninterface CommentRegisterRequestDto {\n    requestUserId:number;\n    videoId:number;\n    comment:string;\n}\n\nexport default function VideoCommentContainer({comments}:CommentList) {\n\n    const router = useRouter();\n    const classes = useStyles();\n    const [commentList, setCommentList] = useState(comments)\n    const [comment, setComment] = useState(\"\");\n    async function submitHandler() {\n        //const {data} = axios.post()\n        if (comment.length < 3) {\n            window.alert(\"입력이 너무 적습니다\");\n            setComment(\"\");\n        };\n\n        const payload:CommentRegisterRequestDto = {\n            requestUserId : Number(localStorage.getItem(\"id\")),\n            videoId: Number(router.query.id),\n            comment: comment\n        };\n\n        const { status } = await axios.post(\"http://localhost:8082/registration/comment\",payload);\n        if (status === 201) {\n            const response = await axios.get(`video/${Number(router.query.id)}/comments`)\n            setCommentList(response.data);\n        }\n    }\n\n    return (\n        <>\n            <form>\n                <TextField style={{ width: '100%'}} label=\"Leave Your Comment Here..!\"\n                onChange={e => setComment(e.target.value)}/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\" onClick={submitHandler}>\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n\n            <h3>Comments</h3>\n            <List className={classes.root}>\n                {commentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <VideoLargeCommentContainer cId={c.id} largeComments={c.largeComments}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}