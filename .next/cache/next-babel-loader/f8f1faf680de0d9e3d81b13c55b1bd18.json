{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-comment.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport VideoLargeCommentContainer from \"./video-large-comment\";\nimport { Button, TextField } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function VideoCommentContainer({\n  comments\n}) {\n  const classes = useStyles();\n  const {\n    0: commentList,\n    1: setCommentList\n  } = useState(comments);\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Comments\"), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, commentList.map((c, index) => __jsx(React.Fragment, null, __jsx(ListItem, {\n    key: c.id,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    href: `/community/${c.userId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, __jsx(Avatar, {\n    alt: c.name,\n    src: c.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }))), __jsx(ListItemText, {\n    primary: c.name,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }), c.comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  })), c.largeComments.length === 0 ? \"\" : __jsx(VideoLargeCommentContainer, {\n    largeComments: c.largeComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }), __jsx(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-comment.tsx"],"names":["React","useState","createStyles","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","VideoLargeCommentContainer","Button","TextField","useStyles","theme","root","width","backgroundColor","palette","background","paper","inline","display","VideoCommentContainer","comments","classes","commentList","setCommentList","map","c","index","id","userId","name","userImg","comment","largeComments","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {createStyles, Theme, makeStyles} from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport VideoLargeCommentContainer from \"./video-large-comment\";\nimport {Button, TextField} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface CommentList {\n    comments: Comment[];\n}\n\nexport default function VideoCommentContainer({comments}:CommentList) {\n\n    const classes = useStyles();\n    const [commentList, setCommentList] = useState(comments)\n\n    return (\n        <>\n            <form>\n                <TextField style={{ width: '100%'}} label=\"Leave Your Comment Here..!\"/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\">\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n\n            <h3>Comments</h3>\n            <List className={classes.root}>\n                {commentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        {c.largeComments.length === 0\n                            ?  \"\"\n                            :   <VideoLargeCommentContainer\n                                largeComments={c.largeComments} />\n                        }\n\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}