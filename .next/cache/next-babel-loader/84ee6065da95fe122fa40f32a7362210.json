{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx\";\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport LargeCommentList from \"../comment/large-comment-container\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    marginLeft: '50px',\n    width: '100%',\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: 'inline'\n  }\n}));\nexport default function VideoLargeCommentContainer({\n  largeComments\n}) {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: largeCommentList,\n    1: setLargeCommentList\n  } = useState(largeComments);\n  const classes = useStyles();\n  console.log('largecomment :', largeComments);\n  console.log('largecomment : ', largeCommentList);\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    style: {\n      width: '100%'\n    },\n    label: \"Leave Your Comment Here..!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Submit\"), __jsx(Button, {\n    type: \"reset\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Reset\")), __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, largeCommentList.length > 0 && largeCommentList.map((c, index) => __jsx(React.Fragment, null, __jsx(ListItem, {\n    key: c.id,\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, __jsx(\"a\", {\n    href: `/community/${c.userId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, __jsx(Avatar, {\n    alt: c.name,\n    src: c.userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }))), __jsx(ListItemText, {\n    primary: c.name,\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 41\n      }\n    }), c.comment),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  })), __jsx(VideoLargeCommentContainer, {\n    largeComments: c.largeComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }), __jsx(Divider, {\n    variant: \"inset\",\n    component: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 30\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-large-comment.tsx"],"names":["createStyles","makeStyles","List","ListItem","ListItemAvatar","Avatar","ListItemText","React","useState","Typography","Divider","Button","TextField","useRouter","LargeCommentList","useStyles","theme","root","marginLeft","width","backgroundColor","palette","background","paper","inline","display","VideoLargeCommentContainer","largeComments","query","largeCommentList","setLargeCommentList","classes","console","log","length","map","c","index","id","userId","name","userImg","comment"],"mappings":"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","sourcesContent":["import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React,{useState} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {Button, TextField} from \"@material-ui/core\";\nimport {useRouter} from \"next/router\";\nimport LargeCommentList from \"../comment/large-comment-container\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: '50px',\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n        },\n        inline: {\n            display: 'inline',\n        },\n    }),\n);\n\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email:string;\n    name: string;\n    userImg: string;\n}\n\n\ninterface LargeCommentList {\n    largeComments: LargeComment[];\n}\n\nexport default function VideoLargeCommentContainer({largeComments}:LargeCommentList) {\n    const {query} = useRouter();\n    const [largeCommentList, setLargeCommentList] = useState(largeComments);\n    const classes = useStyles();\n    console.log('largecomment :', largeComments);\n    console.log('largecomment : ', largeCommentList)\n\n    return (\n        <>\n            <form>\n                <TextField style={{width: '100%'}} label=\"Leave Your Comment Here..!\"/>\n                <br/>\n                <Button variant=\"outlined\" color=\"primary\">\n                    Submit\n                </Button>\n                <Button type=\"reset\" variant=\"outlined\">Reset</Button>\n            </form>\n\n            <List className={classes.root}>\n                {largeCommentList.length > 0 && largeCommentList.map((c,index) => (\n                    <>\n                        <ListItem key={c.id} alignItems=\"flex-start\">\n                            <ListItemAvatar>\n                                <a href={`/community/${c.userId}`}>\n                                    <Avatar alt={c.name} src={c.userImg}/>\n                                </a>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={c.name}\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            component=\"span\"\n                                            variant=\"body2\"\n                                            className={classes.inline}\n                                            color=\"textPrimary\"\n                                        >\n                                        </Typography>\n                                        {c.comment}\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                        <VideoLargeCommentContainer largeComments={c.largeComments}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        <br/><br/>\n                    </>\n                ))}\n            </List>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}