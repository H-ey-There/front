{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport default function Video(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      video = _useState[0],\n      setVideo = _useState[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!localStorage.getItem(\"token\")) {\n      window.alert(\"로그인페이지로 이동합니다\");\n      window.location.href = \"/login\";\n    }\n\n    function loadData() {\n      return _loadData.apply(this, arguments);\n    }\n\n    function _loadData() {\n      _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, _data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log('hihi : ', router.query.id);\n\n                if (!(router.query.id !== undefined)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                console.log(\"http://localhost:8082/video/\".concat(router.query.id));\n                _context.next = 5;\n                return fetch(\"http://localhost:8082/video/\".concat(router.query.id));\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                _data = _context.sent;\n                console.log('data: ', _data);\n                _context.next = 12;\n                return setVideo(_data);\n\n              case 12:\n                console.log('video : ', video);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _loadData.apply(this, arguments);\n    }\n\n    console.log('data : ', data);\n\n    if (!data) {\n      loadData();\n    }\n  }, [router.query.id]);\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), __jsx(VideoSingleContainer, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Video, \"8IPbUt/L7hvDJC8K1RgcHvACovU=\", false, function () {\n  return [useRouter];\n});\n\n_c = Video;\n\nVideo.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"http://localhost:8082/video/\".concat(ctx.query.id, \"requestUserId=4\"));\n\n          case 2:\n            _yield$axios$get = _context2.sent;\n            data = _yield$axios$get.data;\n            return _context2.abrupt(\"return\", {\n              data: data\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/video/[id].tsx"],"names":["Navbar","VideoSingleContainer","useRouter","useEffect","useState","axios","Video","data","video","setVideo","router","localStorage","getItem","window","alert","location","href","loadData","console","log","query","id","undefined","fetch","response","json","getInitialProps","ctx","get"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,oBAAP,MAAiC,+CAAjC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AA4CA,eAAe,SAASC,KAAT,OAAuB;AAAA;;AAAA,MAAPC,IAAO,QAAPA,IAAO;;AAAA,kBACRH,QAAQ,CAAQG,IAAR,CADA;AAAA,MAC3BC,KAD2B;AAAA,MACpBC,QADoB;;AAElC,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAACQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAChCC,MAAAA,MAAM,CAACC,KAAP,CAAa,eAAb;AACAD,MAAAA,MAAM,CAACE,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH;;AAJW,aAMGC,QANH;AAAA;AAAA;;AAAA;AAAA,2EAMZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIC,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,MAAM,CAACU,KAAP,CAAaC,EAApC;;AADJ,sBAEQX,MAAM,CAACU,KAAP,CAAaC,EAAb,KAAoBC,SAF5B;AAAA;AAAA;AAAA;;AAGQJ,gBAAAA,OAAO,CAACC,GAAR,uCAA2CT,MAAM,CAACU,KAAP,CAAaC,EAAxD;AAHR;AAAA,uBAI+BE,KAAK,uCAAgCb,MAAM,CAACU,KAAP,CAAaC,EAA7C,EAJpC;;AAAA;AAIcG,gBAAAA,QAJd;AAAA;AAAA,uBAKiCA,QAAQ,CAACC,IAAT,EALjC;;AAAA;AAKclB,gBAAAA,KALd;AAMQW,gBAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBZ,KAAtB;AANR;AAAA,uBAOcE,QAAQ,CAACF,KAAD,CAPtB;;AAAA;AAQQW,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBX,KAAvB;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANY;AAAA;AAAA;;AAkBZU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBZ,IAAtB;;AACA,QAAI,CAACA,IAAL,EAAW;AACPU,MAAAA,QAAQ;AACX;AACJ,GAtBQ,EAsBN,CAACP,MAAM,CAACU,KAAP,CAAaC,EAAd,CAtBM,CAAT;AAyBA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,oBAAD;AAAsB,IAAA,IAAI,EAAEd,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;GAnCuBD,K;UAELJ,S;;;KAFKI,K;;AAqCxBA,KAAK,CAACoB,eAAN;AAAA,uEAAwB,kBAAOC,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGtB,KAAK,CAACuB,GAAN,uCAAyCD,GAAG,CAACP,KAAJ,CAAUC,EAAnD,qBADH;;AAAA;AAAA;AACZd,YAAAA,IADY,oBACZA,IADY;AAAA,8CAGb;AAAEA,cAAAA,IAAI,EAAJA;AAAF,aAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import Navbar from \"../../components/navbar\";\nimport VideoSingleContainer from \"../../components/video/video-single-container\";\nimport {useRouter} from \"next/router\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {NextPageContext} from \"next\";\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface Video {\n    id: number;\n    title: string;\n    description: string;\n    createdAt: string;\n    modifiedAt: string;\n    thumbnailUrl: string;\n    videoUrl: string;\n    viewCount: number\n    goodStatus: boolean,\n    badStatus: boolean;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    comments: Comment[];\n}\n\nexport default function Video({data}) {\n    const [video, setVideo] = useState<Video>(data);\n    const router = useRouter()\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"token\")) {\n            window.alert(\"로그인페이지로 이동합니다\");\n            window.location.href = \"/login\";\n        }\n\n        async function loadData() {\n            console.log('hihi : ', router.query.id)\n            if (router.query.id !== undefined) {\n                console.log(`http://localhost:8082/video/${router.query.id}`)\n                const response = await fetch(`http://localhost:8082/video/${router.query.id}`);\n                const data:Video = await response.json();\n                console.log('data: ', data);\n                await setVideo(data);\n                console.log('video : ',video)\n            }\n        }\n\n        console.log('data : ',data);\n        if (!data) {\n            loadData();\n        }\n    }, [router.query.id]);\n\n\n    return (\n        <>\n            <Navbar/>\n            <VideoSingleContainer data={data}/>\n        </>\n    )\n}\n\nVideo.getInitialProps = async (ctx:NextPageContext) => {\n    const { data } = await axios.get(`http://localhost:8082/video/${ctx.query.id}requestUserId=4`);\n\n    return { data };\n}"]},"metadata":{},"sourceType":"module"}