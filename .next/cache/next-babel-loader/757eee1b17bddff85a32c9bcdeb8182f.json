{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-metadata-container.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport MoodBadOutlinedIcon from '@material-ui/icons/MoodBadOutlined';\nimport EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\nimport axios from \"axios\";\nimport cookieCutter from 'cookie-cutter';\nexport default function VideoMetadataContainer({\n  id,\n  title,\n  description,\n  createdAt,\n  viewCount,\n  goodStatus,\n  badStatus,\n  userId,\n  name,\n  userImg\n}) {\n  const {\n    0: good,\n    1: setGood\n  } = useState(0);\n  const {\n    0: bad,\n    1: setBad\n  } = useState(0);\n  const {\n    0: goodCurrentStatus,\n    1: setGoodStatus\n  } = useState(goodStatus);\n  const {\n    0: badCurrentStatus,\n    1: setBadStatus\n  } = useState(badStatus);\n  const {\n    0: subscribe,\n    1: setSubscribe\n  } = useState(false);\n\n  async function goodIconClickHandler(e) {\n    e.preventDefault();\n    await axios.get(`http://localhost:8082/video/${id}/good/user/${cookieCutter.get(\"id\")}`).then(response => {\n      console.log('data:', response.data);\n      const {\n        good,\n        bad,\n        goodStatus,\n        badStatus\n      } = response.data;\n      setGood(good);\n      setBad(bad);\n      setGoodStatus(goodStatus);\n      setBadStatus(badStatus);\n    }).catch(err => console.error(err));\n  }\n\n  async function badIconClickHandler(e) {\n    e.preventDefault();\n    await axios.get(`http://localhost:8082/video/${id}/bad/user/${cookieCutter.get(\"id\")}`).then(response => {\n      console.log('data:', response.data);\n      const {\n        good,\n        bad,\n        goodStatus,\n        badStatus\n      } = response.data;\n      setGood(good);\n      setBad(bad);\n      setGoodStatus(goodStatus);\n      setBadStatus(badStatus);\n    }).catch(err => console.error(err));\n  }\n\n  async function subscribeHandler() {\n    setSubscribe(!subscribe);\n  }\n\n  return __jsx(\"div\", {\n    className: \"video-bottom-section\",\n    style: {\n      margin: '15px',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Avatar, {\n    alt: \"Remy Sharp\",\n    src: userImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"video-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: `/video/${id}`,\n    className: \"video-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    href: `/community/${userId}`,\n    className: \"video-channel-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, name), \"\\xA0\\xA0\\xA0\", __jsx(\"button\", {\n    style: {\n      color: \"white\",\n      background: \"#FF5335\",\n      borderRadius: \"15%\"\n    },\n    onClick: subscribeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, subscribe ? \"cancel\" : \"subscribe\")), __jsx(\"div\", {\n    className: \"video-metadata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"view  \", viewCount), \"\\u2022\", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"uploaded date \", createdAt), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }\n  }), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(EmojiEmotionsOutlinedIcon, {\n    onClick: e => goodIconClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), \" \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 90\n    }\n  }, \"Good: \", good), \"\\xA0\\xA0\\xA0\", __jsx(MoodBadOutlinedIcon, {\n    onClick: e => badIconClickHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), \" \", __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 83\n    }\n  }, \"Bad: \", bad)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }\n  }), __jsx(Typography, {\n    component: \"span\",\n    variant: \"body2\",\n    style: {\n      display: 'inline'\n    },\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, description))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/video-metadata-container.tsx"],"names":["React","useState","Avatar","Typography","MoodBadOutlinedIcon","EmojiEmotionsOutlinedIcon","axios","cookieCutter","VideoMetadataContainer","id","title","description","createdAt","viewCount","goodStatus","badStatus","userId","name","userImg","good","setGood","bad","setBad","goodCurrentStatus","setGoodStatus","badCurrentStatus","setBadStatus","subscribe","setSubscribe","goodIconClickHandler","e","preventDefault","get","then","response","console","log","data","catch","err","error","badIconClickHandler","subscribeHandler","margin","padding","color","background","borderRadius","display"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {Avatar, Typography} from \"@material-ui/core\";\nimport MoodBadOutlinedIcon from '@material-ui/icons/MoodBadOutlined';\nimport EmojiEmotionsOutlinedIcon from '@material-ui/icons/EmojiEmotionsOutlined';\nimport axios from \"axios\";\nimport cookieCutter from 'cookie-cutter'\n\ninterface VideoMetadata {\n    id:number,\n    title:string,\n    description:string,\n    createdAt:string,\n    viewCount:number,\n    goodStatus:boolean,\n    badStatus:boolean,\n    userId:number,\n    name:string,\n    userImg:string,\n}\n\nexport default function VideoMetadataContainer({id, title, description, createdAt, viewCount, goodStatus, badStatus, userId, name, userImg}:VideoMetadata) {\n    const [good, setGood] = useState(0);\n    const [bad, setBad] = useState(0);\n    const [goodCurrentStatus, setGoodStatus] = useState(goodStatus);\n    const [badCurrentStatus, setBadStatus] = useState(badStatus);\n    const [subscribe, setSubscribe] = useState(false);\n\n\n    async function goodIconClickHandler(e:MouseEvent) {\n        e.preventDefault();\n        await axios.get(`http://localhost:8082/video/${id}/good/user/${cookieCutter.get(\"id\")}`)\n            .then(response => {\n                console.log('data:', response.data);\n                const {good, bad, goodStatus, badStatus} = response.data;\n                setGood(good);\n                setBad(bad);\n                setGoodStatus(goodStatus);\n                setBadStatus(badStatus)\n            })\n            .catch(err => console.error(err));\n\n    }\n\n    async function badIconClickHandler(e:MouseEvent) {\n        e.preventDefault();\n        await axios.get(`http://localhost:8082/video/${id}/bad/user/${cookieCutter.get(\"id\")}`)\n            .then(response => {\n                console.log('data:', response.data);\n                const {good, bad, goodStatus, badStatus} = response.data;\n                setGood(good);\n                setBad(bad);\n                setGoodStatus(goodStatus);\n                setBadStatus(badStatus)\n            })\n            .catch(err => console.error(err));\n\n    }\n\n    async function subscribeHandler() {\n        setSubscribe(!subscribe);\n    }\n\n    return (\n        <div className=\"video-bottom-section\" style={{margin: '15px', padding: '10px'}}>\n            <Avatar alt=\"Remy Sharp\" src={userImg}/>\n\n            <div className=\"video-details\">\n                <a href={`/video/${id}`} className=\"video-title\">{title}</a>\n                <span><a href={`/community/${userId}`} className=\"video-channel-name\">{name}</a>\n                    &nbsp;&nbsp;&nbsp;\n                    <button style={{\n                        color: \"white\",\n                        background: \"#FF5335\",\n                        borderRadius: \"15%\"\n                    }} onClick={subscribeHandler}>{subscribe ? \"cancel\" : \"subscribe\"}</button>\n                </span>\n\n                <div className=\"video-metadata\">\n                    <span>view  {viewCount}</span>\n                    •\n                    <span>uploaded date {createdAt}</span>\n\n                    <br/><br/>\n\n                    <span>\n                        <EmojiEmotionsOutlinedIcon onClick={e => goodIconClickHandler}/> <strong>Good: {good}</strong>\n                        &nbsp;&nbsp;&nbsp;\n                        <MoodBadOutlinedIcon onClick={e => badIconClickHandler}/> <strong>Bad: {bad}</strong>\n                    </span>\n\n                    <br/><br/>\n\n                    <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        style={{display: 'inline'}}\n                        color=\"textPrimary\">\n                        {description}\n                    </Typography>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}