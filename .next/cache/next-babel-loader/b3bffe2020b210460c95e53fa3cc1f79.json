{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/modal/video-upload-modal.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport { TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nexport default function VideoUploadModal() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: thumbnail,\n    1: setThumbnail\n  } = useState({\n    preview: \"\",\n    raw: \"\"\n  });\n  const {\n    0: video,\n    1: setVideo\n  } = useState({\n    preview: \"\",\n    raw: \"\"\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function onSubmitHandler() {\n    if (title.length < 3) {\n      window.alert(\"타이틀 최소 3자이상 입력하세요\");\n      return;\n    }\n\n    if (description.length < 3) {\n      window.alert(\"비디오 설명란을 최소 3자이상 입력하세요\");\n      return;\n    }\n\n    if (thumbnail.preview === \"\" && thumbnail.raw === \"\") {\n      window.alert(\"썸네일을 업로드해주세요\");\n      return;\n    }\n\n    if (video.preview === \"\" && video.raw === \"\") {\n      window.alert(\"썸네일을 업로드해주세요\");\n      return;\n    }\n\n    const form = new FormData();\n    form.append(\"requestUserId\", \"1\");\n    form.append(\"title\", title);\n    form.append(\"description\", description);\n    form.append(\"thumbnail\", thumbnail.raw);\n    form.append(\"video\", video.raw);\n    const response = await axios.post(\"http://localhost:8082/registration\", form);\n    const {\n      status,\n      data\n    } = response;\n\n    if (status === 201) {\n      console.log(data);\n      window.location.href = `/video/${data}`;\n    }\n  }\n\n  function thumbnailFileChangeHandler(e) {\n    console.log(`thumbnail : ${e.target.files[0]}`);\n    setThumbnail({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    });\n  }\n\n  function videoFileChangeHandler(e) {\n    console.log(`video : ${e.target.files[0]}`);\n    setVideo({\n      preview: URL.createObjectURL(e.target.files[0]),\n      raw: e.target.files[0]\n    });\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/video-plus.svg\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Video Upload\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, __jsx(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, __jsx(TextField, {\n    label: \"video title\",\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }), __jsx(TextField, {\n    label: \"video description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    onChange: thumbnailFileChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    onChange: videoFileChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  })))), __jsx(\"img\", {\n    src: thumbnail.preview,\n    alt: \"thumbnail preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), __jsx(\"video\", {\n    src: video.preview,\n    alt: \"video preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Disagree\"), __jsx(Button, {\n    onClick: onSubmitHandler,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, \"Agree\"))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/modal/video-upload-modal.tsx"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","TextField","axios","VideoUploadModal","open","setOpen","theme","fullScreen","breakpoints","down","title","setTitle","description","setDescription","thumbnail","setThumbnail","preview","raw","video","setVideo","loading","setLoading","onSubmitHandler","length","window","alert","form","FormData","append","response","post","status","data","console","log","location","href","thumbnailFileChangeHandler","e","target","files","URL","createObjectURL","videoFileChangeHandler","handleClickOpen","handleClose","overflow","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {useTheme} from '@material-ui/core/styles';\nimport {TextField} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport default function VideoUploadModal() {\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [thumbnail, setThumbnail] = useState({preview: \"\", raw: \"\"});\n    const [video, setVideo] = useState({preview: \"\", raw: \"\"});\n\n    const [loading, setLoading] = useState(false);\n\n    async function onSubmitHandler () {\n        if (title.length < 3) {\n            window.alert(\"타이틀 최소 3자이상 입력하세요\");\n            return;\n        }\n\n        if (description.length < 3) {\n            window.alert(\"비디오 설명란을 최소 3자이상 입력하세요\");\n            return;\n        }\n\n        if (thumbnail.preview === \"\" && thumbnail.raw === \"\") {\n            window.alert(\"썸네일을 업로드해주세요\");\n            return;\n        }\n\n        if (video.preview === \"\" && video.raw === \"\") {\n            window.alert(\"썸네일을 업로드해주세요\");\n            return;\n        }\n\n        const form = new FormData();\n        form.append(\"requestUserId\", \"1\");\n        form.append(\"title\", title);\n        form.append(\"description\", description);\n        form.append(\"thumbnail\", thumbnail.raw);\n        form.append(\"video\", video.raw);\n\n        const response = await axios.post(\"http://localhost:8082/registration\", form);\n        const { status, data } = response;\n        if (status === 201) {\n            console.log(data);\n            window.location.href = `/video/${data}`;\n        }\n\n    }\n\n    function thumbnailFileChangeHandler(e) {\n        console.log(`thumbnail : ${e.target.files[0]}`);\n        setThumbnail({\n            preview: URL.createObjectURL(e.target.files[0]),\n            raw: e.target.files[0],\n        });\n    }\n\n    function videoFileChangeHandler(e) {\n        console.log(`video : ${e.target.files[0]}`);\n\n        setVideo({\n            preview: URL.createObjectURL(e.target.files[0]),\n            raw: e.target.files[0],\n        });\n    }\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <img src=\"/icons/video-plus.svg\" onClick={handleClickOpen}/>\n\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n                style={{\n                    overflow: 'scroll'\n                }}\n            >\n                <DialogTitle id=\"responsive-dialog-title\">{\"Video Upload\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <form action=\"\">\n                            <TextField  label=\"video title\" onChange={e => setTitle(e.target.value)}/>\n                            <br/>\n                            <br/>\n                            <TextField  label=\"video description\" onChange={e => setDescription(e.target.value)} />\n                            <br/>\n                            <input type=\"file\" onChange={thumbnailFileChangeHandler}/>\n                            <input type=\"file\" onChange={videoFileChangeHandler}/>\n                            \n                            <br/>\n\n                        </form>\n                    </DialogContentText>\n                </DialogContent>\n\n                <img src={thumbnail.preview} alt=\"thumbnail preview\"/>\n                <video src={video.preview} alt=\"video preview\"/>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Disagree\n                    </Button>\n                    <Button onClick={onSubmitHandler} color=\"primary\" autoFocus>\n                        Agree\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}