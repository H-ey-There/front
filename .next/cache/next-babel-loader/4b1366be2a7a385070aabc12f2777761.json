{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/upload/video.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport { Button } from \"@material-ui/core\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      minWidth: '300px',\n      maxWidth: '1000px',\n      rows: 19\n    },\n    preview: {\n      minWidth: '300px',\n      maxWidth: '1000px'\n    },\n    button: {\n      margin: '10px',\n      padding: '10px'\n    }\n  });\n});\nexport default function UploadVideo() {\n  _s();\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var _useState3 = useState({\n    preview: \"\",\n    raw: null\n  }),\n      thumbnail = _useState3[0],\n      setThumbnail = _useState3[1];\n\n  var _useState4 = useState({\n    preview: \"\",\n    raw: null\n  }),\n      video = _useState4[0],\n      setVideo = _useState4[1];\n\n  var classes = useStyles();\n\n  function onResetHandler() {\n    return _onResetHandler.apply(this, arguments);\n  }\n\n  function _onResetHandler() {\n    _onResetHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setTitle(\"\");\n              setDescription(\"\");\n              setThumbnail({\n                preview: \"\",\n                raw: null\n              });\n              setVideo({\n                preview: \"\",\n                raw: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _onResetHandler.apply(this, arguments);\n  }\n\n  function onSubmitHandler() {\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  function _onSubmitHandler() {\n    _onSubmitHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var form;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              form = new FormData();\n              form.append(\"requestUserId\", \"1\");\n              form.append(\"title\", title);\n              form.append(\"description\", description);\n              form.append(\"thumbnail\", thumbnail.raw);\n              form.append(\"video\", video.raw);\n              _context2.next = 8;\n              return axios.post(\"http://localhost:8082/registration\", form).then(function (response) {\n                var status = response.status,\n                    data = response.data;\n                if (status === 201 || status == 200) console.log(data);\n              })[\"catch\"](function (error) {\n                console.error(error);\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _onSubmitHandler.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    label: \"Title\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"title...\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), __jsx(TextField, {\n    className: classes.textField,\n    label: \"Video Description\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"video description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 10,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-thumbnail\",\n    name: \"upload-photo\",\n    type: \"file\",\n    onChange: function onChange(e) {\n      return setThumbnail({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Upload Thumbnail\")), thumbnail.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    className: classes.preview,\n    src: thumbnail.preview,\n    alt: \"thumbnail preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"upload-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    style: {\n      display: 'none'\n    },\n    id: \"upload-video\",\n    name: \"upload-video\",\n    type: \"file\",\n    onChange: function onChange(e) {\n      return setVideo({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0]\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }), video.raw !== null && __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }), __jsx(\"video\", {\n    className: classes.preview,\n    autoPlay: true,\n    controls: true,\n    src: video.preview,\n    alt: \"video preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  })), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Upload Video\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Upload\"), __jsx(Button, {\n    className: classes.button,\n    color: \"primary\",\n    variant: \"contained\",\n    component: \"span\",\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"Reset\")));\n}\n\n_s(UploadVideo, \"52PZASe0gzIsxWqvMeWlheZsC/c=\", false, function () {\n  return [useStyles];\n});\n\n_c = UploadVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadVideo\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/upload/video.tsx"],"names":["React","useState","createStyles","makeStyles","TextField","axios","Button","useStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","minWidth","maxWidth","rows","preview","button","margin","padding","UploadVideo","title","setTitle","description","setDescription","raw","thumbnail","setThumbnail","video","setVideo","classes","onResetHandler","onSubmitHandler","form","FormData","append","post","then","response","status","data","console","log","error","shrink","e","target","value","URL","createObjectURL","files"],"mappings":"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","sourcesContent":["import React,{useState} from \"react\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\nimport {Button} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            minWidth: '300px',\n            maxWidth: '1000px',\n            rows: 19\n        },\n        preview: {\n            minWidth: '300px',\n            maxWidth: '1000px'\n        },\n        button: {\n            margin: '10px',\n            padding: '10px'\n        }\n    }),\n);\n\n\ninterface Metadata {\n    preview: string;\n    raw?: File;\n}\n\nexport default function UploadVideo() {\n    const [title, setTitle] = useState<string>(\"\");\n    const [description, setDescription] = useState<string>(\"\");\n    const [thumbnail, setThumbnail] = useState<Metadata>({\n        preview: \"\",\n        raw: null,\n    });\n    const [video, setVideo] = useState<Metadata>({\n       preview: \"\",\n       raw: null,\n    });\n\n    const classes = useStyles();\n\n    async function onResetHandler() {\n        setTitle(\"\"); setDescription(\"\");\n        setThumbnail({preview: \"\", raw: null});\n        setVideo({preview: \"\", raw: null});\n    }\n\n    async function onSubmitHandler() {\n        const form = new FormData();\n        form.append(\"requestUserId\", \"1\");\n        form.append(\"title\", title);\n        form.append(\"description\", description);\n        form.append(\"thumbnail\", thumbnail.raw);\n        form.append(\"video\", video.raw);\n\n        await axios.post(\"http://localhost:8082/registration\", form)\n            .then(response => {\n                const {status, data} = response;\n                if (status === 201 || status == 200)\n                    console.log(data);\n            })\n            .catch(error => {\n                console.error(error);\n            })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div>\n                <TextField\n                    className={classes.textField}\n                    label=\"Title\"\n                    style={{ margin: 8 }}\n                    placeholder=\"title...\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    onChange={e => setTitle(e.target.value)}\n                />\n\n                <TextField\n                    className={classes.textField}\n                    label=\"Video Description\"\n                    style={{ margin: 8 }}\n                    placeholder=\"video description\"\n                    fullWidth\n                    multiline\n                    rows={10}\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    onChange={e => setDescription(e.target.value)}\n                />\n\n                <label htmlFor=\"upload-thumbnail\">\n                    <input\n                        style={{ display: 'none' }}\n                        id=\"upload-thumbnail\"\n                        name=\"upload-photo\"\n                        type=\"file\"\n                        onChange={e => setThumbnail({\n                            preview: URL.createObjectURL(e.target.files[0]),\n                            raw: e.target.files[0]\n                        })}\n                    />\n\n                    <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\">\n                        Upload Thumbnail\n                    </Button>\n                </label>\n\n                {thumbnail.raw !== null &&\n                (\n                    <>\n                    <br/>\n                    <img className={classes.preview} src={thumbnail.preview} alt=\"thumbnail preview\"/>\n                    <br/>\n                    </>\n                )\n\n                }\n                <br/>\n\n                <label htmlFor=\"upload-video\">\n                    <input\n                        style={{ display: 'none' }}\n                        id=\"upload-video\"\n                        name=\"upload-video\"\n                        type=\"file\"\n                        onChange={e => setVideo({\n                                preview: URL.createObjectURL(e.target.files[0]),\n                                raw: e.target.files[0],\n                            })}\n                    />\n                    <br/>\n                    {video.raw !== null && (\n                        <>\n                            <br/>\n                            <video className={classes.preview} autoPlay controls src={video.preview} alt=\"video preview\"/>\n                            <br/>\n                        </>\n                    )}\n                    <br/>\n\n                    <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\">\n                        Upload Video\n                    </Button>\n                </label>\n                <br/>\n                <br/>\n                <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\" onClick={onSubmitHandler}>\n                    Upload\n                </Button>\n                <Button className={classes.button} color=\"primary\" variant=\"contained\" component=\"span\" onClick={onSubmitHandler}>\n                    Reset\n                </Button>\n\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}