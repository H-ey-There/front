{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport VideoContainer from \"../components/video/video-container\";\nimport Navbar from \"../components/navbar\";\nimport VideoSection from \"../components/video/video-section\";\nimport axios from \"axios\";\nexport default function Index() {\n  const {\n    0: topViewVideos,\n    1: setTopViewVideos\n  } = useState([]);\n  const {\n    0: topLikeVideos,\n    1: setTopLikeVideos\n  } = useState([]);\n  const {\n    0: videos,\n    1: setVideos\n  } = useState([]);\n  useEffect(() => {\n    if (!localStorage.getItem(\"token\")) {\n      window.alert(\"로그인페이지로 이동합니다\");\n      window.location.href = \"/login\";\n    }\n\n    async function loadVideo() {\n      const response1 = await axios.get(\"http://localhost:8082/video\");\n      const videos = response1.data;\n      console.log(videos);\n      setVideos(videos);\n      const response2 = await axios.get(\"http://localhost:8082/order/topView\");\n      const topViewVideos = response2.data;\n      console.log(videos);\n      setTopViewVideos(topViewVideos);\n      const response3 = await axios.get(\"http://localhost:8082/order/goodCount\");\n      const topLikeVideos = response3.data;\n      console.log(topLikeVideos);\n      setTopLikeVideos(topLikeVideos);\n    }\n\n    loadVideo();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(VideoSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, topViewVideos.map(video => {\n    const {\n      id,\n      title,\n      createdAt,\n      thumbnailUrl,\n      viewCount,\n      userId,\n      name,\n      userImg\n    } = video;\n    return __jsx(VideoContainer, {\n      id: id,\n      title: title,\n      createdAt: createdAt,\n      thumbnailUrl: thumbnailUrl,\n      viewCount: viewCount,\n      userId: userId,\n      name: name,\n      userImg: userImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    });\n  })), __jsx(VideoSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, topLikeVideos.map(video => {\n    const {\n      id,\n      title,\n      createdAt,\n      thumbnailUrl,\n      viewCount,\n      userId,\n      name,\n      userImg\n    } = video;\n    return __jsx(VideoContainer, {\n      id: id,\n      title: title,\n      createdAt: createdAt,\n      thumbnailUrl: thumbnailUrl,\n      viewCount: viewCount,\n      userId: userId,\n      name: name,\n      userImg: userImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    });\n  })), __jsx(VideoSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, videos.map(video => {\n    const {\n      id,\n      title,\n      createdAt,\n      thumbnailUrl,\n      viewCount,\n      userId,\n      name,\n      userImg\n    } = video;\n    return __jsx(VideoContainer, {\n      id: id,\n      title: title,\n      createdAt: createdAt,\n      thumbnailUrl: thumbnailUrl,\n      viewCount: viewCount,\n      userId: userId,\n      name: name,\n      userImg: userImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 33\n      }\n    });\n  })), __jsx(\"style\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, `\n .video-section {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem 1rem;\n    padding: 3rem 0;\n    margin: 0 1.5rem;\n    border-top: 4px solid #CCC;\n  }\n  \n  .video-section:first-child {\n    border-top: none;\n  }\n  \n   .video-section-title {\n    grid-column: 1 / -1;\n    margin: -.5rem 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 .5rem;\n  }\n  \n  .video-section-title-close {\n    border: none;\n    background: none;\n    padding: 0;\n    font-size: 2rem;\n    color: #555;\n    cursor: pointer;\n  }\n  \n                `)));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/pages/index.tsx"],"names":["React","useState","useEffect","VideoContainer","Navbar","VideoSection","axios","Index","topViewVideos","setTopViewVideos","topLikeVideos","setTopLikeVideos","videos","setVideos","localStorage","getItem","window","alert","location","href","loadVideo","response1","get","data","console","log","response2","response3","map","video","id","title","createdAt","thumbnailUrl","viewCount","userId","name","userImg"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport VideoContainer from \"../components/video/video-container\";\nimport Navbar from \"../components/navbar\"\nimport VideoSection from \"../components/video/video-section\";\nimport axios from \"axios\";\n\ninterface LargeComment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n}\n\ninterface Comment {\n    id: number;\n    comment: string;\n    createdAt: string;\n    modifiedAt: string;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    largeComments: LargeComment[];\n}\n\ninterface Video {\n    id: number;\n    title: string;\n    description: string;\n    createdAt: string;\n    modifiedAt: string;\n    thumbnailUrl: string;\n    videoUrl: string;\n    viewCount: number\n    goodStatus: boolean,\n    badStatus: boolean;\n    userId: number;\n    email: string;\n    name: string;\n    userImg: string;\n    comments: Comment[];\n}\n\nexport default function Index() {\n\n    const [topViewVideos, setTopViewVideos] = useState([]);\n    const [topLikeVideos, setTopLikeVideos] = useState([]);\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        if (!localStorage.getItem(\"token\")) {\n            window.alert(\"로그인페이지로 이동합니다\");\n            window.location.href = \"/login\";\n        }\n\n        async function loadVideo() {\n            const response1 = await axios.get(\"http://localhost:8082/video\")\n            const videos: Video[] = response1.data;\n            console.log(videos);\n            setVideos(videos);\n\n            const response2 = await axios.get(\"http://localhost:8082/order/topView\")\n            const topViewVideos: Video[] = response2.data;\n            console.log(videos);\n            setTopViewVideos(topViewVideos);\n\n            const response3 = await axios.get(\"http://localhost:8082/order/goodCount\")\n            const topLikeVideos: Video[] = response3.data;\n            console.log(topLikeVideos);\n            setTopLikeVideos(topLikeVideos);\n\n        }\n\n        loadVideo();\n    }, [])\n\n\n    return (\n        <>\n            <Navbar/>\n            <div className=\"videos\">\n                <VideoSection>\n                    {\n                        topViewVideos.map((video: Video) => {\n                            const {\n                                id,\n                                title,\n                                createdAt,\n                                thumbnailUrl,\n                                viewCount,\n                                userId,\n                                name,\n                                userImg\n                            } = video;\n                            return (\n                                <VideoContainer id={id}\n                                                title={title}\n                                                createdAt={createdAt}\n                                                thumbnailUrl={thumbnailUrl}\n                                                viewCount={viewCount} userId={userId}\n                                                name={name}\n                                                userImg={userImg}/>\n                            );\n                        })\n                    }\n                </VideoSection>\n\n                <VideoSection>\n                    {\n                        topLikeVideos.map((video: Video) => {\n                            const {\n                                id,\n                                title,\n                                createdAt,\n                                thumbnailUrl,\n                                viewCount,\n                                userId,\n                                name,\n                                userImg\n                            } = video;\n                            return (\n                                <VideoContainer id={id}\n                                                title={title}\n                                                createdAt={createdAt}\n                                                thumbnailUrl={thumbnailUrl}\n                                                viewCount={viewCount}\n                                                userId={userId}\n                                                name={name}\n                                                userImg={userImg}/>\n                            );\n                        })\n                    }\n                </VideoSection>\n\n                <VideoSection>\n                    {\n                        videos.map((video: Video) => {\n                            const {\n                                id,\n                                title,\n                                createdAt,\n                                thumbnailUrl,\n                                viewCount,\n                                userId,\n                                name,\n                                userImg\n                            } = video;\n                            return (\n                                <VideoContainer id={id}\n                                                title={title}\n                                                createdAt={createdAt}\n                                                thumbnailUrl={thumbnailUrl}\n                                                viewCount={viewCount}\n                                                userId={userId}\n                                                name={name}\n                                                userImg={userImg}/>\n                            );\n                        })\n                    }\n                </VideoSection>\n\n                <style>{`\n .video-section {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 3rem 1rem;\n    padding: 3rem 0;\n    margin: 0 1.5rem;\n    border-top: 4px solid #CCC;\n  }\n  \n  .video-section:first-child {\n    border-top: none;\n  }\n  \n   .video-section-title {\n    grid-column: 1 / -1;\n    margin: -.5rem 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 .5rem;\n  }\n  \n  .video-section-title-close {\n    border: none;\n    background: none;\n    padding: 0;\n    font-size: 2rem;\n    color: #555;\n    cursor: pointer;\n  }\n  \n                `}</style>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}