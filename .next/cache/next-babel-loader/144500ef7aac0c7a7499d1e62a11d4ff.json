{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: 'translateZ(0)'\n    },\n    title: {\n      color: theme.palette.primary.contrastText\n    },\n    titleBar: {\n      background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n    }\n  });\n});\nexport default function HotVideoGridListByViewCnt() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      videos = _useState[0],\n      setVideos = _useState[1];\n\n  useEffect(function () {\n    axios.get(\"http://127.0.0.1/api/video/order/topView\", {\n      headers: {\n        \"Authorization\": localStorage.getItem(\"token\")\n      }\n    }).then(function (res) {\n      setVideos(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    className: classes.gridList,\n    cols: 4.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, videos.map(function (v) {\n    return __jsx(GridListTile, {\n      key: v.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, __jsx(\"video\", {\n      muted: true,\n      autoPlay: true,\n      width: \"100%\",\n      src: v.videoUrl,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), __jsx(GridListTileBar, {\n      title: v.title,\n      subtitle: v.viewCount,\n      classes: {\n        root: classes.titleBar,\n        title: classes.title\n      },\n      actionIcon: __jsx(IconButton, {\n        \"aria-label\": \"star \".concat(v.title),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, __jsx(Avatar, {\n        src: v.userImg,\n        alt: v.name,\n        className: classes.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      })),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }));\n  })));\n}\n\n_s(HotVideoGridListByViewCnt, \"jdoSE/cz1MjBRla8Kx2fkLg715I=\", false, function () {\n  return [useStyles];\n});\n\n_c = HotVideoGridListByViewCnt;\n\nvar _c;\n\n$RefreshReg$(_c, \"HotVideoGridListByViewCnt\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/HotVideoGridListByViewCnt.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","GridList","GridListTile","GridListTileBar","IconButton","Avatar","axios","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","transform","title","color","primary","contrastText","titleBar","HotVideoGridListByViewCnt","classes","videos","setVideos","get","headers","localStorage","getItem","then","res","data","err","console","log","map","v","id","videoUrl","viewCount","userImg","name"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport {Avatar, ListSubheader} from \"@material-ui/core\";\nimport {NextPageContext} from \"next\";\nimport axios from \"axios\";\nimport {VideoResponseDto} from \"../../api/video/VideoResponseDto\";\nimport {useRouter} from \"next/router\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.contrastText,\n        },\n        titleBar: {\n            background:\n                'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }),\n);\n\n\n\n\nexport default function HotVideoGridListByViewCnt() {\n    const classes = useStyles();\n    const [videos, setVideos] = useState([])\n\n    useEffect(() => {\n        axios.get(\"http://127.0.0.1/api/video/order/topView\",\n            {\n                headers: {\n                    \"Authorization\": localStorage.getItem(\"token\"),\n                }\n            }\n        ).then(res => {\n            setVideos(res.data)\n        }).catch(err => console.log(err));\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <GridList className={classes.gridList} cols={4.5}>\n                {videos.map((v) => (\n                    <GridListTile key={v.id}>\n                        <video muted autoPlay={true} width=\"100%\" src={v.videoUrl}  />\n                        <GridListTileBar\n                            title={v.title}\n                            subtitle={v.viewCount}\n                            classes={{\n                                root: classes.titleBar,\n                                title: classes.title,\n                            }}\n                            actionIcon={\n                                <IconButton aria-label={`star ${v.title}`}>\n                                    <Avatar src={v.userImg} alt={v.name}  className={classes.title} />\n                                </IconButton>\n                            }\n                        />\n                    </GridListTile>\n                ))}\n            </GridList>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}