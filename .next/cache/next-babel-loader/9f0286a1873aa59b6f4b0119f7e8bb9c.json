{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/modal/streaming-preparation-modal.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { createStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport React, { useState } from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { TextField } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      minWidth: '300px',\n      maxWidth: '1000px',\n      rows: 19\n    },\n    preview: {\n      minWidth: '300px',\n      maxWidth: '500px'\n    },\n    button: {\n      margin: '10px',\n      padding: '10px'\n    }\n  });\n});\nexport default function StreamingPreparationModal() {\n  _s();\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  var _useState = useState(\"\"),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var classes = useStyles();\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/contacts-24px.svg\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    style: {\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Before Live Streaming...\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, __jsx(TextField, {\n    className: classes.textField,\n    label: \"Title\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"room title\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }), __jsx(TextField, {\n    className: classes.textField,\n    label: \"Video Description\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"streming description\",\n    fullWidth: true,\n    multiline: true,\n    rows: 5,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    onChange: function onChange(e) {\n      return setDescription(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  })))), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Close\"), __jsx(Button, {\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \"Go~!\"))));\n}\n\n_s(StreamingPreparationModal, \"HSaAeSUF/74foEn2entxshkXtAI=\", false, function () {\n  return [useTheme, useMediaQuery, useStyles];\n});\n\n_c = StreamingPreparationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamingPreparationModal\");","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/modal/streaming-preparation-modal.tsx"],"names":["createStyles","makeStyles","useTheme","React","useState","useMediaQuery","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","Button","DialogActions","useStyles","theme","root","display","flexWrap","textField","marginLeft","spacing","marginRight","minWidth","maxWidth","rows","preview","button","margin","padding","StreamingPreparationModal","open","setOpen","fullScreen","breakpoints","down","title","setTitle","description","setDescription","classes","handleClickOpen","handleClose","overflow","shrink","e","target","value"],"mappings":"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","sourcesContent":["import {createStyles, makeStyles, Theme, useTheme} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            minWidth: '300px',\n            maxWidth: '1000px',\n            rows: 19\n        },\n        preview: {\n            minWidth: '300px',\n            maxWidth: '500px'\n        },\n        button: {\n            margin: '10px',\n            padding: '10px'\n        }\n    }),\n);\n\nexport default function StreamingPreparationModal() {\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [title, setTitle] = useState<string>(\"\");\n    const [description, setDescription] = useState<string>(\"\");\n\n    const classes = useStyles();\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <img src=\"/icons/contacts-24px.svg\" onClick={handleClickOpen}/>\n\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n                style={{\n                    overflow: 'scroll'\n                }}\n            >\n                <DialogTitle id=\"responsive-dialog-title\">{\"Before Live Streaming...\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <div className={classes.root}>\n                            <div>\n                                <TextField\n                                    className={classes.textField}\n                                    label=\"Title\"\n                                    style={{margin: 8}}\n                                    placeholder=\"room title\"\n                                    fullWidth\n                                    margin=\"normal\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    onChange={e => setTitle(e.target.value)}\n                                />\n\n                                <TextField\n                                    className={classes.textField}\n                                    label=\"Video Description\"\n                                    style={{margin: 8}}\n                                    placeholder=\"streming description\"\n                                    fullWidth\n                                    multiline\n                                    rows={5}\n                                    margin=\"normal\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                    variant=\"outlined\"\n                                    onChange={e => setDescription(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                    </DialogContentText>\n                    <br/>\n\n                </DialogContent>\n\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                    <Button color=\"primary\" autoFocus>\n                        Go~!\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}