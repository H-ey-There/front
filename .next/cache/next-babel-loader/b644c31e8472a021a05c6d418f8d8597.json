{"ast":null,"code":"var _jsxFileName = \"/Users/min/Desktop/Heythere/heythere-client/src/components/video/DefaultVideoGridList.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport { red } from \"@material-ui/core/colors\";\nimport { Avatar, Card, CardContent, CardHeader, Typography } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"next/link\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    //justifyContent: 'space-around',\n    backgroundColor: theme.palette.background.paper\n  },\n  card: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    overflow: 'hidden',\n    maxHeight: 300,\n    border: '1px solid black'\n  },\n  gridList: {\n    flexWrap: 'wrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nconst videos = [{\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}, {\n  id: 1,\n  title: \"string\",\n  description: \"string\",\n  createdAt: new Date(),\n  modifiedAt: new Date(),\n  thumbnailUrl: \"string\",\n  videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n  viewCount: 15,\n  userId: 1,\n  email: \"string\",\n  name: \"string\",\n  userImg: \"string\"\n}];\nexport default function DefaultVideoGridList({\n  initVideos = []\n}) {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(GridList, {\n    cellHeight: 300,\n    className: classes.gridList,\n    cols: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, tileData.map(tile => __jsx(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, __jsx(CardHeader, {\n    avatar: __jsx(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, __jsx(Link, {\n      href: `URL`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, __jsx(Avatar, {\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, \"R\"))),\n    title: \"Shrimp and Chorizo Paella\",\n    subheader: \"September 14, 2016\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }), __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, \"This impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like. his impressive paella is a perfect party dish and a fun meal to cook together with your guests. Add 1 cup of frozen peas along with the mussels, if you like.\"))))));\n}","map":{"version":3,"sources":["/Users/min/Desktop/Heythere/heythere-client/src/components/video/DefaultVideoGridList.tsx"],"names":["React","createStyles","makeStyles","GridList","red","Avatar","Card","CardContent","CardHeader","Typography","IconButton","Link","useStyles","theme","root","display","flexWrap","backgroundColor","palette","background","paper","card","width","overflow","maxHeight","border","gridList","transform","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","videos","id","title","description","createdAt","Date","modifiedAt","thumbnailUrl","videoUrl","viewCount","userId","email","name","userImg","DefaultVideoGridList","initVideos","classes","tileData","map","tile"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAAeC,YAAf,EAA6BC,UAA7B,QAA8C,0BAA9C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAIA,SAAQC,GAAR,QAAkB,0BAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,UAA/C,QAAgE,mBAAhE;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,IACzBZ,YAAY,CAAC;AACTa,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGF;AACAC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAJxC,GADG;AAOTC,EAAAA,IAAI,EAAE;AACFN,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,QAAQ,EAAE,MAFR;AAGFM,IAAAA,KAAK,EAAE,MAHL;AAIFC,IAAAA,QAAQ,EAAE,QAJR;AAKFC,IAAAA,SAAS,EAAE,GALT;AAMFC,IAAAA,MAAM,EAAE;AANN,GAPG;AAeTC,EAAAA,QAAQ,EAAE;AACNV,IAAAA,QAAQ,EAAE,MADJ;AAEN;AACAW,IAAAA,SAAS,EAAE;AAHL,GAfD;AAoBTC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,CADL;AAEHC,IAAAA,UAAU,EAAE,QAFT,CAEmB;;AAFnB,GApBE;AAwBTC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,SAAS,EAAE,cADP;AAEJK,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,UAAU,EAAEpB,KAAK,CAACqB,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC;AAC9CC,MAAAA,QAAQ,EAAEvB,KAAK,CAACqB,WAAN,CAAkBE,QAAlB,CAA2BC;AADS,KAAtC;AAHR,GAxBC;AA+BTC,EAAAA,UAAU,EAAE;AACRX,IAAAA,SAAS,EAAE;AADH,GA/BH;AAkCTY,EAAAA,MAAM,EAAE;AACJtB,IAAAA,eAAe,EAAEb,GAAG,CAAC,GAAD;AADhB;AAlCC,CAAD,CADY,CAA5B;AAyCA,MAAMoC,MAAM,GAAG,CACX;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,WAAW,EAAE,QAHjB;AAIIC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,EAAAA,UAAU,EAAE,IAAID,IAAJ,EALhB;AAMIE,EAAAA,YAAY,EAAE,QANlB;AAOIC,EAAAA,QAAQ,EAAE,qDAPd;AAQIC,EAAAA,SAAS,EAAE,EARf;AASIC,EAAAA,MAAM,EAAE,CATZ;AAUIC,EAAAA,KAAK,EAAE,QAVX;AAWIC,EAAAA,IAAI,EAAE,QAXV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CADW,EAeX;AACIZ,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,WAAW,EAAE,QAHjB;AAIIC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,EAAAA,UAAU,EAAE,IAAID,IAAJ,EALhB;AAMIE,EAAAA,YAAY,EAAE,QANlB;AAOIC,EAAAA,QAAQ,EAAE,qDAPd;AAQIC,EAAAA,SAAS,EAAE,EARf;AASIC,EAAAA,MAAM,EAAE,CATZ;AAUIC,EAAAA,KAAK,EAAE,QAVX;AAWIC,EAAAA,IAAI,EAAE,QAXV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CAfW,EA6BX;AACIZ,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,WAAW,EAAE,QAHjB;AAIIC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,EAAAA,UAAU,EAAE,IAAID,IAAJ,EALhB;AAMIE,EAAAA,YAAY,EAAE,QANlB;AAOIC,EAAAA,QAAQ,EAAE,qDAPd;AAQIC,EAAAA,SAAS,EAAE,EARf;AASIC,EAAAA,MAAM,EAAE,CATZ;AAUIC,EAAAA,KAAK,EAAE,QAVX;AAWIC,EAAAA,IAAI,EAAE,QAXV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CA7BW,EA2CX;AACIZ,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,WAAW,EAAE,QAHjB;AAIIC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,EAAAA,UAAU,EAAE,IAAID,IAAJ,EALhB;AAMIE,EAAAA,YAAY,EAAE,QANlB;AAOIC,EAAAA,QAAQ,EAAE,qDAPd;AAQIC,EAAAA,SAAS,EAAE,EARf;AASIC,EAAAA,MAAM,EAAE,CATZ;AAUIC,EAAAA,KAAK,EAAE,QAVX;AAWIC,EAAAA,IAAI,EAAE,QAXV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CA3CW,EAyDX;AACIZ,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,KAAK,EAAE,QAFX;AAGIC,EAAAA,WAAW,EAAE,QAHjB;AAIIC,EAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,EAAAA,UAAU,EAAE,IAAID,IAAJ,EALhB;AAMIE,EAAAA,YAAY,EAAE,QANlB;AAOIC,EAAAA,QAAQ,EAAE,qDAPd;AAQIC,EAAAA,SAAS,EAAE,EARf;AASIC,EAAAA,MAAM,EAAE,CATZ;AAUIC,EAAAA,KAAK,EAAE,QAVX;AAWIC,EAAAA,IAAI,EAAE,QAXV;AAYIC,EAAAA,OAAO,EAAE;AAZb,CAzDW,CAAf;AAyEA,eAAe,SAASC,oBAAT,CAA8B;AAACC,EAAAA,UAAU,GAAG;AAAd,CAA9B,EAAiD;AAC5D,QAAMC,OAAO,GAAG5C,SAAS,EAAzB;AAEA,SACI;AAAK,IAAA,SAAS,EAAE4C,OAAO,CAAC1C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,UAAU,EAAE,GAAtB;AAA2B,IAAA,SAAS,EAAE0C,OAAO,CAAC9B,QAA9C;AAAwD,IAAA,IAAI,EAAE,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK+B,QAAQ,CAACC,GAAT,CAAcC,IAAD,IACV,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACnC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AACI,IAAA,MAAM,EACF,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAS,MAAA,SAAS,EAAEmC,OAAO,CAACjB,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ,CAFR;AAUI,IAAA,KAAK,EAAC,2BAVV;AAWI,IAAA,SAAS,EAAC,oBAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAcI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oUADJ,CAdJ,CADH,CADL,CADJ,CADJ;AA+BH","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Theme, createStyles, makeStyles} from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport axios from \"axios\";\nimport {VideoResponseDto} from \"../../api/video/VideoResponseDto\";\nimport {red} from \"@material-ui/core/colors\";\nimport {Avatar, Card, CardContent, CardHeader, Typography} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Link from \"next/link\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            //justifyContent: 'space-around',\n            backgroundColor: theme.palette.background.paper,\n        },\n        card: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: '100%',\n            overflow: 'hidden',\n            maxHeight: 300,\n            border: '1px solid black'\n        },\n        gridList: {\n            flexWrap: 'wrap',\n            // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        media: {\n            height: 0,\n            paddingTop: '56.25%', // 16:9\n        },\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create('transform', {\n                duration: theme.transitions.duration.shortest,\n            }),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n        avatar: {\n            backgroundColor: red[500],\n        },\n    }),\n);\n\nconst videos = [\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n    {\n        id: 1,\n        title: \"string\",\n        description: \"string\",\n        createdAt: new Date(),\n        modifiedAt: new Date(),\n        thumbnailUrl: \"string\",\n        videoUrl: \"http://techslides.com/demos/sample-videos/small.mp4\",\n        viewCount: 15,\n        userId: 1,\n        email: \"string\",\n        name: \"string\",\n        userImg: \"string\"\n    },\n]\n\nexport default function DefaultVideoGridList({initVideos = []}) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <GridList cellHeight={300} className={classes.gridList} cols={3}>\n                {tileData.map((tile) => (\n                    <Card className={classes.card}>\n                        <CardHeader\n                            avatar={\n                                <IconButton>\n                                    <Link href={`URL`}>\n                                        <Avatar  className={classes.avatar}>\n                                            R\n                                        </Avatar>\n                                    </Link>\n                                </IconButton>\n                            }\n                            title=\"Shrimp and Chorizo Paella\"\n                            subheader=\"September 14, 2016\"\n                        />\n                        <CardContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                This impressive paella is a perfect party dish and a fun meal to cook together with your\n                                guests. Add 1 cup of frozen peas along with the mussels, if you like.\n                                his impressive paella is a perfect party dish and a fun meal to cook together with your\n                                guests. Add 1 cup of frozen peas along with the mussels, if you like.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                ))}\n            </GridList>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}